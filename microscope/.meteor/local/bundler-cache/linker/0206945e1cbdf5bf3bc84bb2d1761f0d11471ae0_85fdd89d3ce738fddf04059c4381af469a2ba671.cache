[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/mizzao_bootstrap-3/packages/mizzao_bootstrap-3.js        //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {                                                       // 1\n                                                                     // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/mizzao:bootstrap-3/bootstrap-3/js/bootstrap.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*!                                                                                                                    // 1\n * Bootstrap v3.3.1 (http://getbootstrap.com)                                                                          // 2\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 3\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 4\n */                                                                                                                    // 5\n                                                                                                                       // 6\nif (typeof jQuery === 'undefined') {                                                                                   // 7\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')                                                           // 8\n}                                                                                                                      // 9\n                                                                                                                       // 10\n+function ($) {                                                                                                        // 11\n  var version = $.fn.jquery.split(' ')[0].split('.')                                                                   // 12\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {                  // 13\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')                                 // 14\n  }                                                                                                                    // 15\n}(jQuery);                                                                                                             // 16\n                                                                                                                       // 17\n/* ========================================================================                                            // 18\n * Bootstrap: transition.js v3.3.1                                                                                     // 19\n * http://getbootstrap.com/javascript/#transitions                                                                     // 20\n * ========================================================================                                            // 21\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 22\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 23\n * ======================================================================== */                                         // 24\n                                                                                                                       // 25\n                                                                                                                       // 26\n+function ($) {                                                                                                        // 27\n  'use strict';                                                                                                        // 28\n                                                                                                                       // 29\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)                                                      // 30\n  // ============================================================                                                      // 31\n                                                                                                                       // 32\n  function transitionEnd() {                                                                                           // 33\n    var el = document.createElement('bootstrap')                                                                       // 34\n                                                                                                                       // 35\n    var transEndEventNames = {                                                                                         // 36\n      WebkitTransition : 'webkitTransitionEnd',                                                                        // 37\n      MozTransition    : 'transitionend',                                                                              // 38\n      OTransition      : 'oTransitionEnd otransitionend',                                                              // 39\n      transition       : 'transitionend'                                                                               // 40\n    }                                                                                                                  // 41\n                                                                                                                       // 42\n    for (var name in transEndEventNames) {                                                                             // 43\n      if (el.style[name] !== undefined) {                                                                              // 44\n        return { end: transEndEventNames[name] }                                                                       // 45\n      }                                                                                                                // 46\n    }                                                                                                                  // 47\n                                                                                                                       // 48\n    return false // explicit for ie8 (  ._.)                                                                           // 49\n  }                                                                                                                    // 50\n                                                                                                                       // 51\n  // http://blog.alexmaccaw.com/css-transitions                                                                        // 52\n  $.fn.emulateTransitionEnd = function (duration) {                                                                    // 53\n    var called = false                                                                                                 // 54\n    var $el = this                                                                                                     // 55\n    $(this).one('bsTransitionEnd', function () { called = true })                                                      // 56\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }                               // 57\n    setTimeout(callback, duration)                                                                                     // 58\n    return this                                                                                                        // 59\n  }                                                                                                                    // 60\n                                                                                                                       // 61\n  $(function () {                                                                                                      // 62\n    $.support.transition = transitionEnd()                                                                             // 63\n                                                                                                                       // 64\n    if (!$.support.transition) return                                                                                  // 65\n                                                                                                                       // 66\n    $.event.special.bsTransitionEnd = {                                                                                // 67\n      bindType: $.support.transition.end,                                                                              // 68\n      delegateType: $.support.transition.end,                                                                          // 69\n      handle: function (e) {                                                                                           // 70\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)                                    // 71\n      }                                                                                                                // 72\n    }                                                                                                                  // 73\n  })                                                                                                                   // 74\n                                                                                                                       // 75\n}(jQuery);                                                                                                             // 76\n                                                                                                                       // 77\n/* ========================================================================                                            // 78\n * Bootstrap: alert.js v3.3.1                                                                                          // 79\n * http://getbootstrap.com/javascript/#alerts                                                                          // 80\n * ========================================================================                                            // 81\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 82\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 83\n * ======================================================================== */                                         // 84\n                                                                                                                       // 85\n                                                                                                                       // 86\n+function ($) {                                                                                                        // 87\n  'use strict';                                                                                                        // 88\n                                                                                                                       // 89\n  // ALERT CLASS DEFINITION                                                                                            // 90\n  // ======================                                                                                            // 91\n                                                                                                                       // 92\n  var dismiss = '[data-dismiss=\"alert\"]'                                                                               // 93\n  var Alert   = function (el) {                                                                                        // 94\n    $(el).on('click', dismiss, this.close)                                                                             // 95\n  }                                                                                                                    // 96\n                                                                                                                       // 97\n  Alert.VERSION = '3.3.1'                                                                                              // 98\n                                                                                                                       // 99\n  Alert.TRANSITION_DURATION = 150                                                                                      // 100\n                                                                                                                       // 101\n  Alert.prototype.close = function (e) {                                                                               // 102\n    var $this    = $(this)                                                                                             // 103\n    var selector = $this.attr('data-target')                                                                           // 104\n                                                                                                                       // 105\n    if (!selector) {                                                                                                   // 106\n      selector = $this.attr('href')                                                                                    // 107\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7                                   // 108\n    }                                                                                                                  // 109\n                                                                                                                       // 110\n    var $parent = $(selector)                                                                                          // 111\n                                                                                                                       // 112\n    if (e) e.preventDefault()                                                                                          // 113\n                                                                                                                       // 114\n    if (!$parent.length) {                                                                                             // 115\n      $parent = $this.closest('.alert')                                                                                // 116\n    }                                                                                                                  // 117\n                                                                                                                       // 118\n    $parent.trigger(e = $.Event('close.bs.alert'))                                                                     // 119\n                                                                                                                       // 120\n    if (e.isDefaultPrevented()) return                                                                                 // 121\n                                                                                                                       // 122\n    $parent.removeClass('in')                                                                                          // 123\n                                                                                                                       // 124\n    function removeElement() {                                                                                         // 125\n      // detach from parent, fire event then clean up data                                                             // 126\n      $parent.detach().trigger('closed.bs.alert').remove()                                                             // 127\n    }                                                                                                                  // 128\n                                                                                                                       // 129\n    $.support.transition && $parent.hasClass('fade') ?                                                                 // 130\n      $parent                                                                                                          // 131\n        .one('bsTransitionEnd', removeElement)                                                                         // 132\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :                                                             // 133\n      removeElement()                                                                                                  // 134\n  }                                                                                                                    // 135\n                                                                                                                       // 136\n                                                                                                                       // 137\n  // ALERT PLUGIN DEFINITION                                                                                           // 138\n  // =======================                                                                                           // 139\n                                                                                                                       // 140\n  function Plugin(option) {                                                                                            // 141\n    return this.each(function () {                                                                                     // 142\n      var $this = $(this)                                                                                              // 143\n      var data  = $this.data('bs.alert')                                                                               // 144\n                                                                                                                       // 145\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))                                                      // 146\n      if (typeof option == 'string') data[option].call($this)                                                          // 147\n    })                                                                                                                 // 148\n  }                                                                                                                    // 149\n                                                                                                                       // 150\n  var old = $.fn.alert                                                                                                 // 151\n                                                                                                                       // 152\n  $.fn.alert             = Plugin                                                                                      // 153\n  $.fn.alert.Constructor = Alert                                                                                       // 154\n                                                                                                                       // 155\n                                                                                                                       // 156\n  // ALERT NO CONFLICT                                                                                                 // 157\n  // =================                                                                                                 // 158\n                                                                                                                       // 159\n  $.fn.alert.noConflict = function () {                                                                                // 160\n    $.fn.alert = old                                                                                                   // 161\n    return this                                                                                                        // 162\n  }                                                                                                                    // 163\n                                                                                                                       // 164\n                                                                                                                       // 165\n  // ALERT DATA-API                                                                                                    // 166\n  // ==============                                                                                                    // 167\n                                                                                                                       // 168\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)                                            // 169\n                                                                                                                       // 170\n}(jQuery);                                                                                                             // 171\n                                                                                                                       // 172\n/* ========================================================================                                            // 173\n * Bootstrap: button.js v3.3.1                                                                                         // 174\n * http://getbootstrap.com/javascript/#buttons                                                                         // 175\n * ========================================================================                                            // 176\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 177\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 178\n * ======================================================================== */                                         // 179\n                                                                                                                       // 180\n                                                                                                                       // 181\n+function ($) {                                                                                                        // 182\n  'use strict';                                                                                                        // 183\n                                                                                                                       // 184\n  // BUTTON PUBLIC CLASS DEFINITION                                                                                    // 185\n  // ==============================                                                                                    // 186\n                                                                                                                       // 187\n  var Button = function (element, options) {                                                                           // 188\n    this.$element  = $(element)                                                                                        // 189\n    this.options   = $.extend({}, Button.DEFAULTS, options)                                                            // 190\n    this.isLoading = false                                                                                             // 191\n  }                                                                                                                    // 192\n                                                                                                                       // 193\n  Button.VERSION  = '3.3.1'                                                                                            // 194\n                                                                                                                       // 195\n  Button.DEFAULTS = {                                                                                                  // 196\n    loadingText: 'loading...'                                                                                          // 197\n  }                                                                                                                    // 198\n                                                                                                                       // 199\n  Button.prototype.setState = function (state) {                                                                       // 200\n    var d    = 'disabled'                                                                                              // 201\n    var $el  = this.$element                                                                                           // 202\n    var val  = $el.is('input') ? 'val' : 'html'                                                                        // 203\n    var data = $el.data()                                                                                              // 204\n                                                                                                                       // 205\n    state = state + 'Text'                                                                                             // 206\n                                                                                                                       // 207\n    if (data.resetText == null) $el.data('resetText', $el[val]())                                                      // 208\n                                                                                                                       // 209\n    // push to event loop to allow forms to submit                                                                     // 210\n    setTimeout($.proxy(function () {                                                                                   // 211\n      $el[val](data[state] == null ? this.options[state] : data[state])                                                // 212\n                                                                                                                       // 213\n      if (state == 'loadingText') {                                                                                    // 214\n        this.isLoading = true                                                                                          // 215\n        $el.addClass(d).attr(d, d)                                                                                     // 216\n      } else if (this.isLoading) {                                                                                     // 217\n        this.isLoading = false                                                                                         // 218\n        $el.removeClass(d).removeAttr(d)                                                                               // 219\n      }                                                                                                                // 220\n    }, this), 0)                                                                                                       // 221\n  }                                                                                                                    // 222\n                                                                                                                       // 223\n  Button.prototype.toggle = function () {                                                                              // 224\n    var changed = true                                                                                                 // 225\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')                                                     // 226\n                                                                                                                       // 227\n    if ($parent.length) {                                                                                              // 228\n      var $input = this.$element.find('input')                                                                         // 229\n      if ($input.prop('type') == 'radio') {                                                                            // 230\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false                                // 231\n        else $parent.find('.active').removeClass('active')                                                             // 232\n      }                                                                                                                // 233\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')                         // 234\n    } else {                                                                                                           // 235\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))                                            // 236\n    }                                                                                                                  // 237\n                                                                                                                       // 238\n    if (changed) this.$element.toggleClass('active')                                                                   // 239\n  }                                                                                                                    // 240\n                                                                                                                       // 241\n                                                                                                                       // 242\n  // BUTTON PLUGIN DEFINITION                                                                                          // 243\n  // ========================                                                                                          // 244\n                                                                                                                       // 245\n  function Plugin(option) {                                                                                            // 246\n    return this.each(function () {                                                                                     // 247\n      var $this   = $(this)                                                                                            // 248\n      var data    = $this.data('bs.button')                                                                            // 249\n      var options = typeof option == 'object' && option                                                                // 250\n                                                                                                                       // 251\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))                                           // 252\n                                                                                                                       // 253\n      if (option == 'toggle') data.toggle()                                                                            // 254\n      else if (option) data.setState(option)                                                                           // 255\n    })                                                                                                                 // 256\n  }                                                                                                                    // 257\n                                                                                                                       // 258\n  var old = $.fn.button                                                                                                // 259\n                                                                                                                       // 260\n  $.fn.button             = Plugin                                                                                     // 261\n  $.fn.button.Constructor = Button                                                                                     // 262\n                                                                                                                       // 263\n                                                                                                                       // 264\n  // BUTTON NO CONFLICT                                                                                                // 265\n  // ==================                                                                                                // 266\n                                                                                                                       // 267\n  $.fn.button.noConflict = function () {                                                                               // 268\n    $.fn.button = old                                                                                                  // 269\n    return this                                                                                                        // 270\n  }                                                                                                                    // 271\n                                                                                                                       // 272\n                                                                                                                       // 273\n  // BUTTON DATA-API                                                                                                   // 274\n  // ===============                                                                                                   // 275\n                                                                                                                       // 276\n  $(document)                                                                                                          // 277\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {                                          // 278\n      var $btn = $(e.target)                                                                                           // 279\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')                                                           // 280\n      Plugin.call($btn, 'toggle')                                                                                      // 281\n      e.preventDefault()                                                                                               // 282\n    })                                                                                                                 // 283\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {                  // 284\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))                                    // 285\n    })                                                                                                                 // 286\n                                                                                                                       // 287\n}(jQuery);                                                                                                             // 288\n                                                                                                                       // 289\n/* ========================================================================                                            // 290\n * Bootstrap: carousel.js v3.3.1                                                                                       // 291\n * http://getbootstrap.com/javascript/#carousel                                                                        // 292\n * ========================================================================                                            // 293\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 294\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 295\n * ======================================================================== */                                         // 296\n                                                                                                                       // 297\n                                                                                                                       // 298\n+function ($) {                                                                                                        // 299\n  'use strict';                                                                                                        // 300\n                                                                                                                       // 301\n  // CAROUSEL CLASS DEFINITION                                                                                         // 302\n  // =========================                                                                                         // 303\n                                                                                                                       // 304\n  var Carousel = function (element, options) {                                                                         // 305\n    this.$element    = $(element)                                                                                      // 306\n    this.$indicators = this.$element.find('.carousel-indicators')                                                      // 307\n    this.options     = options                                                                                         // 308\n    this.paused      =                                                                                                 // 309\n    this.sliding     =                                                                                                 // 310\n    this.interval    =                                                                                                 // 311\n    this.$active     =                                                                                                 // 312\n    this.$items      = null                                                                                            // 313\n                                                                                                                       // 314\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))                      // 315\n                                                                                                                       // 316\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element                    // 317\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))                                                         // 318\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))                                                         // 319\n  }                                                                                                                    // 320\n                                                                                                                       // 321\n  Carousel.VERSION  = '3.3.1'                                                                                          // 322\n                                                                                                                       // 323\n  Carousel.TRANSITION_DURATION = 600                                                                                   // 324\n                                                                                                                       // 325\n  Carousel.DEFAULTS = {                                                                                                // 326\n    interval: 5000,                                                                                                    // 327\n    pause: 'hover',                                                                                                    // 328\n    wrap: true,                                                                                                        // 329\n    keyboard: true                                                                                                     // 330\n  }                                                                                                                    // 331\n                                                                                                                       // 332\n  Carousel.prototype.keydown = function (e) {                                                                          // 333\n    if (/input|textarea/i.test(e.target.tagName)) return                                                               // 334\n    switch (e.which) {                                                                                                 // 335\n      case 37: this.prev(); break                                                                                      // 336\n      case 39: this.next(); break                                                                                      // 337\n      default: return                                                                                                  // 338\n    }                                                                                                                  // 339\n                                                                                                                       // 340\n    e.preventDefault()                                                                                                 // 341\n  }                                                                                                                    // 342\n                                                                                                                       // 343\n  Carousel.prototype.cycle = function (e) {                                                                            // 344\n    e || (this.paused = false)                                                                                         // 345\n                                                                                                                       // 346\n    this.interval && clearInterval(this.interval)                                                                      // 347\n                                                                                                                       // 348\n    this.options.interval                                                                                              // 349\n      && !this.paused                                                                                                  // 350\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))                                // 351\n                                                                                                                       // 352\n    return this                                                                                                        // 353\n  }                                                                                                                    // 354\n                                                                                                                       // 355\n  Carousel.prototype.getItemIndex = function (item) {                                                                  // 356\n    this.$items = item.parent().children('.item')                                                                      // 357\n    return this.$items.index(item || this.$active)                                                                     // 358\n  }                                                                                                                    // 359\n                                                                                                                       // 360\n  Carousel.prototype.getItemForDirection = function (direction, active) {                                              // 361\n    var delta = direction == 'prev' ? -1 : 1                                                                           // 362\n    var activeIndex = this.getItemIndex(active)                                                                        // 363\n    var itemIndex = (activeIndex + delta) % this.$items.length                                                         // 364\n    return this.$items.eq(itemIndex)                                                                                   // 365\n  }                                                                                                                    // 366\n                                                                                                                       // 367\n  Carousel.prototype.to = function (pos) {                                                                             // 368\n    var that        = this                                                                                             // 369\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))                             // 370\n                                                                                                                       // 371\n    if (pos > (this.$items.length - 1) || pos < 0) return                                                              // 372\n                                                                                                                       // 373\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"  // 374\n    if (activeIndex == pos) return this.pause().cycle()                                                                // 375\n                                                                                                                       // 376\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))                                        // 377\n  }                                                                                                                    // 378\n                                                                                                                       // 379\n  Carousel.prototype.pause = function (e) {                                                                            // 380\n    e || (this.paused = true)                                                                                          // 381\n                                                                                                                       // 382\n    if (this.$element.find('.next, .prev').length && $.support.transition) {                                           // 383\n      this.$element.trigger($.support.transition.end)                                                                  // 384\n      this.cycle(true)                                                                                                 // 385\n    }                                                                                                                  // 386\n                                                                                                                       // 387\n    this.interval = clearInterval(this.interval)                                                                       // 388\n                                                                                                                       // 389\n    return this                                                                                                        // 390\n  }                                                                                                                    // 391\n                                                                                                                       // 392\n  Carousel.prototype.next = function () {                                                                              // 393\n    if (this.sliding) return                                                                                           // 394\n    return this.slide('next')                                                                                          // 395\n  }                                                                                                                    // 396\n                                                                                                                       // 397\n  Carousel.prototype.prev = function () {                                                                              // 398\n    if (this.sliding) return                                                                                           // 399\n    return this.slide('prev')                                                                                          // 400\n  }                                                                                                                    // 401\n                                                                                                                       // 402\n  Carousel.prototype.slide = function (type, next) {                                                                   // 403\n    var $active   = this.$element.find('.item.active')                                                                 // 404\n    var $next     = next || this.getItemForDirection(type, $active)                                                    // 405\n    var isCycling = this.interval                                                                                      // 406\n    var direction = type == 'next' ? 'left' : 'right'                                                                  // 407\n    var fallback  = type == 'next' ? 'first' : 'last'                                                                  // 408\n    var that      = this                                                                                               // 409\n                                                                                                                       // 410\n    if (!$next.length) {                                                                                               // 411\n      if (!this.options.wrap) return                                                                                   // 412\n      $next = this.$element.find('.item')[fallback]()                                                                  // 413\n    }                                                                                                                  // 414\n                                                                                                                       // 415\n    if ($next.hasClass('active')) return (this.sliding = false)                                                        // 416\n                                                                                                                       // 417\n    var relatedTarget = $next[0]                                                                                       // 418\n    var slideEvent = $.Event('slide.bs.carousel', {                                                                    // 419\n      relatedTarget: relatedTarget,                                                                                    // 420\n      direction: direction                                                                                             // 421\n    })                                                                                                                 // 422\n    this.$element.trigger(slideEvent)                                                                                  // 423\n    if (slideEvent.isDefaultPrevented()) return                                                                        // 424\n                                                                                                                       // 425\n    this.sliding = true                                                                                                // 426\n                                                                                                                       // 427\n    isCycling && this.pause()                                                                                          // 428\n                                                                                                                       // 429\n    if (this.$indicators.length) {                                                                                     // 430\n      this.$indicators.find('.active').removeClass('active')                                                           // 431\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])                                    // 432\n      $nextIndicator && $nextIndicator.addClass('active')                                                              // 433\n    }                                                                                                                  // 434\n                                                                                                                       // 435\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\" // 436\n    if ($.support.transition && this.$element.hasClass('slide')) {                                                     // 437\n      $next.addClass(type)                                                                                             // 438\n      $next[0].offsetWidth // force reflow                                                                             // 439\n      $active.addClass(direction)                                                                                      // 440\n      $next.addClass(direction)                                                                                        // 441\n      $active                                                                                                          // 442\n        .one('bsTransitionEnd', function () {                                                                          // 443\n          $next.removeClass([type, direction].join(' ')).addClass('active')                                            // 444\n          $active.removeClass(['active', direction].join(' '))                                                         // 445\n          that.sliding = false                                                                                         // 446\n          setTimeout(function () {                                                                                     // 447\n            that.$element.trigger(slidEvent)                                                                           // 448\n          }, 0)                                                                                                        // 449\n        })                                                                                                             // 450\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)                                                            // 451\n    } else {                                                                                                           // 452\n      $active.removeClass('active')                                                                                    // 453\n      $next.addClass('active')                                                                                         // 454\n      this.sliding = false                                                                                             // 455\n      this.$element.trigger(slidEvent)                                                                                 // 456\n    }                                                                                                                  // 457\n                                                                                                                       // 458\n    isCycling && this.cycle()                                                                                          // 459\n                                                                                                                       // 460\n    return this                                                                                                        // 461\n  }                                                                                                                    // 462\n                                                                                                                       // 463\n                                                                                                                       // 464\n  // CAROUSEL PLUGIN DEFINITION                                                                                        // 465\n  // ==========================                                                                                        // 466\n                                                                                                                       // 467\n  function Plugin(option) {                                                                                            // 468\n    return this.each(function () {                                                                                     // 469\n      var $this   = $(this)                                                                                            // 470\n      var data    = $this.data('bs.carousel')                                                                          // 471\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)                 // 472\n      var action  = typeof option == 'string' ? option : options.slide                                                 // 473\n                                                                                                                       // 474\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))                                       // 475\n      if (typeof option == 'number') data.to(option)                                                                   // 476\n      else if (action) data[action]()                                                                                  // 477\n      else if (options.interval) data.pause().cycle()                                                                  // 478\n    })                                                                                                                 // 479\n  }                                                                                                                    // 480\n                                                                                                                       // 481\n  var old = $.fn.carousel                                                                                              // 482\n                                                                                                                       // 483\n  $.fn.carousel             = Plugin                                                                                   // 484\n  $.fn.carousel.Constructor = Carousel                                                                                 // 485\n                                                                                                                       // 486\n                                                                                                                       // 487\n  // CAROUSEL NO CONFLICT                                                                                              // 488\n  // ====================                                                                                              // 489\n                                                                                                                       // 490\n  $.fn.carousel.noConflict = function () {                                                                             // 491\n    $.fn.carousel = old                                                                                                // 492\n    return this                                                                                                        // 493\n  }                                                                                                                    // 494\n                                                                                                                       // 495\n                                                                                                                       // 496\n  // CAROUSEL DATA-API                                                                                                 // 497\n  // =================                                                                                                 // 498\n                                                                                                                       // 499\n  var clickHandler = function (e) {                                                                                    // 500\n    var href                                                                                                           // 501\n    var $this   = $(this)                                                                                              // 502\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return                                                                          // 504\n    var options = $.extend({}, $target.data(), $this.data())                                                           // 505\n    var slideIndex = $this.attr('data-slide-to')                                                                       // 506\n    if (slideIndex) options.interval = false                                                                           // 507\n                                                                                                                       // 508\n    Plugin.call($target, options)                                                                                      // 509\n                                                                                                                       // 510\n    if (slideIndex) {                                                                                                  // 511\n      $target.data('bs.carousel').to(slideIndex)                                                                       // 512\n    }                                                                                                                  // 513\n                                                                                                                       // 514\n    e.preventDefault()                                                                                                 // 515\n  }                                                                                                                    // 516\n                                                                                                                       // 517\n  $(document)                                                                                                          // 518\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)                                                    // 519\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)                                                 // 520\n                                                                                                                       // 521\n  $(window).on('load', function () {                                                                                   // 522\n    $('[data-ride=\"carousel\"]').each(function () {                                                                     // 523\n      var $carousel = $(this)                                                                                          // 524\n      Plugin.call($carousel, $carousel.data())                                                                         // 525\n    })                                                                                                                 // 526\n  })                                                                                                                   // 527\n                                                                                                                       // 528\n}(jQuery);                                                                                                             // 529\n                                                                                                                       // 530\n/* ========================================================================                                            // 531\n * Bootstrap: collapse.js v3.3.1                                                                                       // 532\n * http://getbootstrap.com/javascript/#collapse                                                                        // 533\n * ========================================================================                                            // 534\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 535\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 536\n * ======================================================================== */                                         // 537\n                                                                                                                       // 538\n                                                                                                                       // 539\n+function ($) {                                                                                                        // 540\n  'use strict';                                                                                                        // 541\n                                                                                                                       // 542\n  // COLLAPSE PUBLIC CLASS DEFINITION                                                                                  // 543\n  // ================================                                                                                  // 544\n                                                                                                                       // 545\n  var Collapse = function (element, options) {                                                                         // 546\n    this.$element      = $(element)                                                                                    // 547\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)                                                      // 548\n    this.$trigger      = $(this.options.trigger).filter('[href=\"#' + element.id + '\"], [data-target=\"#' + element.id + '\"]')\n    this.transitioning = null                                                                                          // 550\n                                                                                                                       // 551\n    if (this.options.parent) {                                                                                         // 552\n      this.$parent = this.getParent()                                                                                  // 553\n    } else {                                                                                                           // 554\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)                                                      // 555\n    }                                                                                                                  // 556\n                                                                                                                       // 557\n    if (this.options.toggle) this.toggle()                                                                             // 558\n  }                                                                                                                    // 559\n                                                                                                                       // 560\n  Collapse.VERSION  = '3.3.1'                                                                                          // 561\n                                                                                                                       // 562\n  Collapse.TRANSITION_DURATION = 350                                                                                   // 563\n                                                                                                                       // 564\n  Collapse.DEFAULTS = {                                                                                                // 565\n    toggle: true,                                                                                                      // 566\n    trigger: '[data-toggle=\"collapse\"]'                                                                                // 567\n  }                                                                                                                    // 568\n                                                                                                                       // 569\n  Collapse.prototype.dimension = function () {                                                                         // 570\n    var hasWidth = this.$element.hasClass('width')                                                                     // 571\n    return hasWidth ? 'width' : 'height'                                                                               // 572\n  }                                                                                                                    // 573\n                                                                                                                       // 574\n  Collapse.prototype.show = function () {                                                                              // 575\n    if (this.transitioning || this.$element.hasClass('in')) return                                                     // 576\n                                                                                                                       // 577\n    var activesData                                                                                                    // 578\n    var actives = this.$parent && this.$parent.find('> .panel').children('.in, .collapsing')                           // 579\n                                                                                                                       // 580\n    if (actives && actives.length) {                                                                                   // 581\n      activesData = actives.data('bs.collapse')                                                                        // 582\n      if (activesData && activesData.transitioning) return                                                             // 583\n    }                                                                                                                  // 584\n                                                                                                                       // 585\n    var startEvent = $.Event('show.bs.collapse')                                                                       // 586\n    this.$element.trigger(startEvent)                                                                                  // 587\n    if (startEvent.isDefaultPrevented()) return                                                                        // 588\n                                                                                                                       // 589\n    if (actives && actives.length) {                                                                                   // 590\n      Plugin.call(actives, 'hide')                                                                                     // 591\n      activesData || actives.data('bs.collapse', null)                                                                 // 592\n    }                                                                                                                  // 593\n                                                                                                                       // 594\n    var dimension = this.dimension()                                                                                   // 595\n                                                                                                                       // 596\n    this.$element                                                                                                      // 597\n      .removeClass('collapse')                                                                                         // 598\n      .addClass('collapsing')[dimension](0)                                                                            // 599\n      .attr('aria-expanded', true)                                                                                     // 600\n                                                                                                                       // 601\n    this.$trigger                                                                                                      // 602\n      .removeClass('collapsed')                                                                                        // 603\n      .attr('aria-expanded', true)                                                                                     // 604\n                                                                                                                       // 605\n    this.transitioning = 1                                                                                             // 606\n                                                                                                                       // 607\n    var complete = function () {                                                                                       // 608\n      this.$element                                                                                                    // 609\n        .removeClass('collapsing')                                                                                     // 610\n        .addClass('collapse in')[dimension]('')                                                                        // 611\n      this.transitioning = 0                                                                                           // 612\n      this.$element                                                                                                    // 613\n        .trigger('shown.bs.collapse')                                                                                  // 614\n    }                                                                                                                  // 615\n                                                                                                                       // 616\n    if (!$.support.transition) return complete.call(this)                                                              // 617\n                                                                                                                       // 618\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))                                                      // 619\n                                                                                                                       // 620\n    this.$element                                                                                                      // 621\n      .one('bsTransitionEnd', $.proxy(complete, this))                                                                 // 622\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])                     // 623\n  }                                                                                                                    // 624\n                                                                                                                       // 625\n  Collapse.prototype.hide = function () {                                                                              // 626\n    if (this.transitioning || !this.$element.hasClass('in')) return                                                    // 627\n                                                                                                                       // 628\n    var startEvent = $.Event('hide.bs.collapse')                                                                       // 629\n    this.$element.trigger(startEvent)                                                                                  // 630\n    if (startEvent.isDefaultPrevented()) return                                                                        // 631\n                                                                                                                       // 632\n    var dimension = this.dimension()                                                                                   // 633\n                                                                                                                       // 634\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight                                               // 635\n                                                                                                                       // 636\n    this.$element                                                                                                      // 637\n      .addClass('collapsing')                                                                                          // 638\n      .removeClass('collapse in')                                                                                      // 639\n      .attr('aria-expanded', false)                                                                                    // 640\n                                                                                                                       // 641\n    this.$trigger                                                                                                      // 642\n      .addClass('collapsed')                                                                                           // 643\n      .attr('aria-expanded', false)                                                                                    // 644\n                                                                                                                       // 645\n    this.transitioning = 1                                                                                             // 646\n                                                                                                                       // 647\n    var complete = function () {                                                                                       // 648\n      this.transitioning = 0                                                                                           // 649\n      this.$element                                                                                                    // 650\n        .removeClass('collapsing')                                                                                     // 651\n        .addClass('collapse')                                                                                          // 652\n        .trigger('hidden.bs.collapse')                                                                                 // 653\n    }                                                                                                                  // 654\n                                                                                                                       // 655\n    if (!$.support.transition) return complete.call(this)                                                              // 656\n                                                                                                                       // 657\n    this.$element                                                                                                      // 658\n      [dimension](0)                                                                                                   // 659\n      .one('bsTransitionEnd', $.proxy(complete, this))                                                                 // 660\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)                                                              // 661\n  }                                                                                                                    // 662\n                                                                                                                       // 663\n  Collapse.prototype.toggle = function () {                                                                            // 664\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()                                                             // 665\n  }                                                                                                                    // 666\n                                                                                                                       // 667\n  Collapse.prototype.getParent = function () {                                                                         // 668\n    return $(this.options.parent)                                                                                      // 669\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')                                     // 670\n      .each($.proxy(function (i, element) {                                                                            // 671\n        var $element = $(element)                                                                                      // 672\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)                                        // 673\n      }, this))                                                                                                        // 674\n      .end()                                                                                                           // 675\n  }                                                                                                                    // 676\n                                                                                                                       // 677\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {                                        // 678\n    var isOpen = $element.hasClass('in')                                                                               // 679\n                                                                                                                       // 680\n    $element.attr('aria-expanded', isOpen)                                                                             // 681\n    $trigger                                                                                                           // 682\n      .toggleClass('collapsed', !isOpen)                                                                               // 683\n      .attr('aria-expanded', isOpen)                                                                                   // 684\n  }                                                                                                                    // 685\n                                                                                                                       // 686\n  function getTargetFromTrigger($trigger) {                                                                            // 687\n    var href                                                                                                           // 688\n    var target = $trigger.attr('data-target')                                                                          // 689\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7                         // 690\n                                                                                                                       // 691\n    return $(target)                                                                                                   // 692\n  }                                                                                                                    // 693\n                                                                                                                       // 694\n                                                                                                                       // 695\n  // COLLAPSE PLUGIN DEFINITION                                                                                        // 696\n  // ==========================                                                                                        // 697\n                                                                                                                       // 698\n  function Plugin(option) {                                                                                            // 699\n    return this.each(function () {                                                                                     // 700\n      var $this   = $(this)                                                                                            // 701\n      var data    = $this.data('bs.collapse')                                                                          // 702\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)                 // 703\n                                                                                                                       // 704\n      if (!data && options.toggle && option == 'show') options.toggle = false                                          // 705\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))                                       // 706\n      if (typeof option == 'string') data[option]()                                                                    // 707\n    })                                                                                                                 // 708\n  }                                                                                                                    // 709\n                                                                                                                       // 710\n  var old = $.fn.collapse                                                                                              // 711\n                                                                                                                       // 712\n  $.fn.collapse             = Plugin                                                                                   // 713\n  $.fn.collapse.Constructor = Collapse                                                                                 // 714\n                                                                                                                       // 715\n                                                                                                                       // 716\n  // COLLAPSE NO CONFLICT                                                                                              // 717\n  // ====================                                                                                              // 718\n                                                                                                                       // 719\n  $.fn.collapse.noConflict = function () {                                                                             // 720\n    $.fn.collapse = old                                                                                                // 721\n    return this                                                                                                        // 722\n  }                                                                                                                    // 723\n                                                                                                                       // 724\n                                                                                                                       // 725\n  // COLLAPSE DATA-API                                                                                                 // 726\n  // =================                                                                                                 // 727\n                                                                                                                       // 728\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {                              // 729\n    var $this   = $(this)                                                                                              // 730\n                                                                                                                       // 731\n    if (!$this.attr('data-target')) e.preventDefault()                                                                 // 732\n                                                                                                                       // 733\n    var $target = getTargetFromTrigger($this)                                                                          // 734\n    var data    = $target.data('bs.collapse')                                                                          // 735\n    var option  = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this })                                      // 736\n                                                                                                                       // 737\n    Plugin.call($target, option)                                                                                       // 738\n  })                                                                                                                   // 739\n                                                                                                                       // 740\n}(jQuery);                                                                                                             // 741\n                                                                                                                       // 742\n/* ========================================================================                                            // 743\n * Bootstrap: dropdown.js v3.3.1                                                                                       // 744\n * http://getbootstrap.com/javascript/#dropdowns                                                                       // 745\n * ========================================================================                                            // 746\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 747\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 748\n * ======================================================================== */                                         // 749\n                                                                                                                       // 750\n                                                                                                                       // 751\n+function ($) {                                                                                                        // 752\n  'use strict';                                                                                                        // 753\n                                                                                                                       // 754\n  // DROPDOWN CLASS DEFINITION                                                                                         // 755\n  // =========================                                                                                         // 756\n                                                                                                                       // 757\n  var backdrop = '.dropdown-backdrop'                                                                                  // 758\n  var toggle   = '[data-toggle=\"dropdown\"]'                                                                            // 759\n  var Dropdown = function (element) {                                                                                  // 760\n    $(element).on('click.bs.dropdown', this.toggle)                                                                    // 761\n  }                                                                                                                    // 762\n                                                                                                                       // 763\n  Dropdown.VERSION = '3.3.1'                                                                                           // 764\n                                                                                                                       // 765\n  Dropdown.prototype.toggle = function (e) {                                                                           // 766\n    var $this = $(this)                                                                                                // 767\n                                                                                                                       // 768\n    if ($this.is('.disabled, :disabled')) return                                                                       // 769\n                                                                                                                       // 770\n    var $parent  = getParent($this)                                                                                    // 771\n    var isActive = $parent.hasClass('open')                                                                            // 772\n                                                                                                                       // 773\n    clearMenus()                                                                                                       // 774\n                                                                                                                       // 775\n    if (!isActive) {                                                                                                   // 776\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {                      // 777\n        // if mobile we use a backdrop because click events don't delegate                                             // 778\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)                             // 779\n      }                                                                                                                // 780\n                                                                                                                       // 781\n      var relatedTarget = { relatedTarget: this }                                                                      // 782\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))                                                  // 783\n                                                                                                                       // 784\n      if (e.isDefaultPrevented()) return                                                                               // 785\n                                                                                                                       // 786\n      $this                                                                                                            // 787\n        .trigger('focus')                                                                                              // 788\n        .attr('aria-expanded', 'true')                                                                                 // 789\n                                                                                                                       // 790\n      $parent                                                                                                          // 791\n        .toggleClass('open')                                                                                           // 792\n        .trigger('shown.bs.dropdown', relatedTarget)                                                                   // 793\n    }                                                                                                                  // 794\n                                                                                                                       // 795\n    return false                                                                                                       // 796\n  }                                                                                                                    // 797\n                                                                                                                       // 798\n  Dropdown.prototype.keydown = function (e) {                                                                          // 799\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return                             // 800\n                                                                                                                       // 801\n    var $this = $(this)                                                                                                // 802\n                                                                                                                       // 803\n    e.preventDefault()                                                                                                 // 804\n    e.stopPropagation()                                                                                                // 805\n                                                                                                                       // 806\n    if ($this.is('.disabled, :disabled')) return                                                                       // 807\n                                                                                                                       // 808\n    var $parent  = getParent($this)                                                                                    // 809\n    var isActive = $parent.hasClass('open')                                                                            // 810\n                                                                                                                       // 811\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {                                                 // 812\n      if (e.which == 27) $parent.find(toggle).trigger('focus')                                                         // 813\n      return $this.trigger('click')                                                                                    // 814\n    }                                                                                                                  // 815\n                                                                                                                       // 816\n    var desc = ' li:not(.divider):visible a'                                                                           // 817\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)                                    // 818\n                                                                                                                       // 819\n    if (!$items.length) return                                                                                         // 820\n                                                                                                                       // 821\n    var index = $items.index(e.target)                                                                                 // 822\n                                                                                                                       // 823\n    if (e.which == 38 && index > 0)                 index--                        // up                               // 824\n    if (e.which == 40 && index < $items.length - 1) index++                        // down                             // 825\n    if (!~index)                                      index = 0                                                        // 826\n                                                                                                                       // 827\n    $items.eq(index).trigger('focus')                                                                                  // 828\n  }                                                                                                                    // 829\n                                                                                                                       // 830\n  function clearMenus(e) {                                                                                             // 831\n    if (e && e.which === 3) return                                                                                     // 832\n    $(backdrop).remove()                                                                                               // 833\n    $(toggle).each(function () {                                                                                       // 834\n      var $this         = $(this)                                                                                      // 835\n      var $parent       = getParent($this)                                                                             // 836\n      var relatedTarget = { relatedTarget: this }                                                                      // 837\n                                                                                                                       // 838\n      if (!$parent.hasClass('open')) return                                                                            // 839\n                                                                                                                       // 840\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))                                                  // 841\n                                                                                                                       // 842\n      if (e.isDefaultPrevented()) return                                                                               // 843\n                                                                                                                       // 844\n      $this.attr('aria-expanded', 'false')                                                                             // 845\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)                                         // 846\n    })                                                                                                                 // 847\n  }                                                                                                                    // 848\n                                                                                                                       // 849\n  function getParent($this) {                                                                                          // 850\n    var selector = $this.attr('data-target')                                                                           // 851\n                                                                                                                       // 852\n    if (!selector) {                                                                                                   // 853\n      selector = $this.attr('href')                                                                                    // 854\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7     // 855\n    }                                                                                                                  // 856\n                                                                                                                       // 857\n    var $parent = selector && $(selector)                                                                              // 858\n                                                                                                                       // 859\n    return $parent && $parent.length ? $parent : $this.parent()                                                        // 860\n  }                                                                                                                    // 861\n                                                                                                                       // 862\n                                                                                                                       // 863\n  // DROPDOWN PLUGIN DEFINITION                                                                                        // 864\n  // ==========================                                                                                        // 865\n                                                                                                                       // 866\n  function Plugin(option) {                                                                                            // 867\n    return this.each(function () {                                                                                     // 868\n      var $this = $(this)                                                                                              // 869\n      var data  = $this.data('bs.dropdown')                                                                            // 870\n                                                                                                                       // 871\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))                                                // 872\n      if (typeof option == 'string') data[option].call($this)                                                          // 873\n    })                                                                                                                 // 874\n  }                                                                                                                    // 875\n                                                                                                                       // 876\n  var old = $.fn.dropdown                                                                                              // 877\n                                                                                                                       // 878\n  $.fn.dropdown             = Plugin                                                                                   // 879\n  $.fn.dropdown.Constructor = Dropdown                                                                                 // 880\n                                                                                                                       // 881\n                                                                                                                       // 882\n  // DROPDOWN NO CONFLICT                                                                                              // 883\n  // ====================                                                                                              // 884\n                                                                                                                       // 885\n  $.fn.dropdown.noConflict = function () {                                                                             // 886\n    $.fn.dropdown = old                                                                                                // 887\n    return this                                                                                                        // 888\n  }                                                                                                                    // 889\n                                                                                                                       // 890\n                                                                                                                       // 891\n  // APPLY TO STANDARD DROPDOWN ELEMENTS                                                                               // 892\n  // ===================================                                                                               // 893\n                                                                                                                       // 894\n  $(document)                                                                                                          // 895\n    .on('click.bs.dropdown.data-api', clearMenus)                                                                      // 896\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })                          // 897\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)                                               // 898\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)                                            // 899\n    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)                                   // 900\n    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)                                // 901\n                                                                                                                       // 902\n}(jQuery);                                                                                                             // 903\n                                                                                                                       // 904\n/* ========================================================================                                            // 905\n * Bootstrap: modal.js v3.3.1                                                                                          // 906\n * http://getbootstrap.com/javascript/#modals                                                                          // 907\n * ========================================================================                                            // 908\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 909\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 910\n * ======================================================================== */                                         // 911\n                                                                                                                       // 912\n                                                                                                                       // 913\n+function ($) {                                                                                                        // 914\n  'use strict';                                                                                                        // 915\n                                                                                                                       // 916\n  // MODAL CLASS DEFINITION                                                                                            // 917\n  // ======================                                                                                            // 918\n                                                                                                                       // 919\n  var Modal = function (element, options) {                                                                            // 920\n    this.options        = options                                                                                      // 921\n    this.$body          = $(document.body)                                                                             // 922\n    this.$element       = $(element)                                                                                   // 923\n    this.$backdrop      =                                                                                              // 924\n    this.isShown        = null                                                                                         // 925\n    this.scrollbarWidth = 0                                                                                            // 926\n                                                                                                                       // 927\n    if (this.options.remote) {                                                                                         // 928\n      this.$element                                                                                                    // 929\n        .find('.modal-content')                                                                                        // 930\n        .load(this.options.remote, $.proxy(function () {                                                               // 931\n          this.$element.trigger('loaded.bs.modal')                                                                     // 932\n        }, this))                                                                                                      // 933\n    }                                                                                                                  // 934\n  }                                                                                                                    // 935\n                                                                                                                       // 936\n  Modal.VERSION  = '3.3.1'                                                                                             // 937\n                                                                                                                       // 938\n  Modal.TRANSITION_DURATION = 300                                                                                      // 939\n  Modal.BACKDROP_TRANSITION_DURATION = 150                                                                             // 940\n                                                                                                                       // 941\n  Modal.DEFAULTS = {                                                                                                   // 942\n    backdrop: true,                                                                                                    // 943\n    keyboard: true,                                                                                                    // 944\n    show: true                                                                                                         // 945\n  }                                                                                                                    // 946\n                                                                                                                       // 947\n  Modal.prototype.toggle = function (_relatedTarget) {                                                                 // 948\n    return this.isShown ? this.hide() : this.show(_relatedTarget)                                                      // 949\n  }                                                                                                                    // 950\n                                                                                                                       // 951\n  Modal.prototype.show = function (_relatedTarget) {                                                                   // 952\n    var that = this                                                                                                    // 953\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })                                             // 954\n                                                                                                                       // 955\n    this.$element.trigger(e)                                                                                           // 956\n                                                                                                                       // 957\n    if (this.isShown || e.isDefaultPrevented()) return                                                                 // 958\n                                                                                                                       // 959\n    this.isShown = true                                                                                                // 960\n                                                                                                                       // 961\n    this.checkScrollbar()                                                                                              // 962\n    this.setScrollbar()                                                                                                // 963\n    this.$body.addClass('modal-open')                                                                                  // 964\n                                                                                                                       // 965\n    this.escape()                                                                                                      // 966\n    this.resize()                                                                                                      // 967\n                                                                                                                       // 968\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))                     // 969\n                                                                                                                       // 970\n    this.backdrop(function () {                                                                                        // 971\n      var transition = $.support.transition && that.$element.hasClass('fade')                                          // 972\n                                                                                                                       // 973\n      if (!that.$element.parent().length) {                                                                            // 974\n        that.$element.appendTo(that.$body) // don't move modals dom position                                           // 975\n      }                                                                                                                // 976\n                                                                                                                       // 977\n      that.$element                                                                                                    // 978\n        .show()                                                                                                        // 979\n        .scrollTop(0)                                                                                                  // 980\n                                                                                                                       // 981\n      if (that.options.backdrop) that.adjustBackdrop()                                                                 // 982\n      that.adjustDialog()                                                                                              // 983\n                                                                                                                       // 984\n      if (transition) {                                                                                                // 985\n        that.$element[0].offsetWidth // force reflow                                                                   // 986\n      }                                                                                                                // 987\n                                                                                                                       // 988\n      that.$element                                                                                                    // 989\n        .addClass('in')                                                                                                // 990\n        .attr('aria-hidden', false)                                                                                    // 991\n                                                                                                                       // 992\n      that.enforceFocus()                                                                                              // 993\n                                                                                                                       // 994\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })                                             // 995\n                                                                                                                       // 996\n      transition ?                                                                                                     // 997\n        that.$element.find('.modal-dialog') // wait for modal to slide in                                              // 998\n          .one('bsTransitionEnd', function () {                                                                        // 999\n            that.$element.trigger('focus').trigger(e)                                                                  // 1000\n          })                                                                                                           // 1001\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :                                                           // 1002\n        that.$element.trigger('focus').trigger(e)                                                                      // 1003\n    })                                                                                                                 // 1004\n  }                                                                                                                    // 1005\n                                                                                                                       // 1006\n  Modal.prototype.hide = function (e) {                                                                                // 1007\n    if (e) e.preventDefault()                                                                                          // 1008\n                                                                                                                       // 1009\n    e = $.Event('hide.bs.modal')                                                                                       // 1010\n                                                                                                                       // 1011\n    this.$element.trigger(e)                                                                                           // 1012\n                                                                                                                       // 1013\n    if (!this.isShown || e.isDefaultPrevented()) return                                                                // 1014\n                                                                                                                       // 1015\n    this.isShown = false                                                                                               // 1016\n                                                                                                                       // 1017\n    this.escape()                                                                                                      // 1018\n    this.resize()                                                                                                      // 1019\n                                                                                                                       // 1020\n    $(document).off('focusin.bs.modal')                                                                                // 1021\n                                                                                                                       // 1022\n    this.$element                                                                                                      // 1023\n      .removeClass('in')                                                                                               // 1024\n      .attr('aria-hidden', true)                                                                                       // 1025\n      .off('click.dismiss.bs.modal')                                                                                   // 1026\n                                                                                                                       // 1027\n    $.support.transition && this.$element.hasClass('fade') ?                                                           // 1028\n      this.$element                                                                                                    // 1029\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))                                                         // 1030\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :                                                             // 1031\n      this.hideModal()                                                                                                 // 1032\n  }                                                                                                                    // 1033\n                                                                                                                       // 1034\n  Modal.prototype.enforceFocus = function () {                                                                         // 1035\n    $(document)                                                                                                        // 1036\n      .off('focusin.bs.modal') // guard against infinite focus loop                                                    // 1037\n      .on('focusin.bs.modal', $.proxy(function (e) {                                                                   // 1038\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {                                    // 1039\n          this.$element.trigger('focus')                                                                               // 1040\n        }                                                                                                              // 1041\n      }, this))                                                                                                        // 1042\n  }                                                                                                                    // 1043\n                                                                                                                       // 1044\n  Modal.prototype.escape = function () {                                                                               // 1045\n    if (this.isShown && this.options.keyboard) {                                                                       // 1046\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {                                              // 1047\n        e.which == 27 && this.hide()                                                                                   // 1048\n      }, this))                                                                                                        // 1049\n    } else if (!this.isShown) {                                                                                        // 1050\n      this.$element.off('keydown.dismiss.bs.modal')                                                                    // 1051\n    }                                                                                                                  // 1052\n  }                                                                                                                    // 1053\n                                                                                                                       // 1054\n  Modal.prototype.resize = function () {                                                                               // 1055\n    if (this.isShown) {                                                                                                // 1056\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))                                                // 1057\n    } else {                                                                                                           // 1058\n      $(window).off('resize.bs.modal')                                                                                 // 1059\n    }                                                                                                                  // 1060\n  }                                                                                                                    // 1061\n                                                                                                                       // 1062\n  Modal.prototype.hideModal = function () {                                                                            // 1063\n    var that = this                                                                                                    // 1064\n    this.$element.hide()                                                                                               // 1065\n    this.backdrop(function () {                                                                                        // 1066\n      that.$body.removeClass('modal-open')                                                                             // 1067\n      that.resetAdjustments()                                                                                          // 1068\n      that.resetScrollbar()                                                                                            // 1069\n      that.$element.trigger('hidden.bs.modal')                                                                         // 1070\n    })                                                                                                                 // 1071\n  }                                                                                                                    // 1072\n                                                                                                                       // 1073\n  Modal.prototype.removeBackdrop = function () {                                                                       // 1074\n    this.$backdrop && this.$backdrop.remove()                                                                          // 1075\n    this.$backdrop = null                                                                                              // 1076\n  }                                                                                                                    // 1077\n                                                                                                                       // 1078\n  Modal.prototype.backdrop = function (callback) {                                                                     // 1079\n    var that = this                                                                                                    // 1080\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''                                                         // 1081\n                                                                                                                       // 1082\n    if (this.isShown && this.options.backdrop) {                                                                       // 1083\n      var doAnimate = $.support.transition && animate                                                                  // 1084\n                                                                                                                       // 1085\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')                                             // 1086\n        .prependTo(this.$element)                                                                                      // 1087\n        .on('click.dismiss.bs.modal', $.proxy(function (e) {                                                           // 1088\n          if (e.target !== e.currentTarget) return                                                                     // 1089\n          this.options.backdrop == 'static'                                                                            // 1090\n            ? this.$element[0].focus.call(this.$element[0])                                                            // 1091\n            : this.hide.call(this)                                                                                     // 1092\n        }, this))                                                                                                      // 1093\n                                                                                                                       // 1094\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow                                                     // 1095\n                                                                                                                       // 1096\n      this.$backdrop.addClass('in')                                                                                    // 1097\n                                                                                                                       // 1098\n      if (!callback) return                                                                                            // 1099\n                                                                                                                       // 1100\n      doAnimate ?                                                                                                      // 1101\n        this.$backdrop                                                                                                 // 1102\n          .one('bsTransitionEnd', callback)                                                                            // 1103\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :                                                  // 1104\n        callback()                                                                                                     // 1105\n                                                                                                                       // 1106\n    } else if (!this.isShown && this.$backdrop) {                                                                      // 1107\n      this.$backdrop.removeClass('in')                                                                                 // 1108\n                                                                                                                       // 1109\n      var callbackRemove = function () {                                                                               // 1110\n        that.removeBackdrop()                                                                                          // 1111\n        callback && callback()                                                                                         // 1112\n      }                                                                                                                // 1113\n      $.support.transition && this.$element.hasClass('fade') ?                                                         // 1114\n        this.$backdrop                                                                                                 // 1115\n          .one('bsTransitionEnd', callbackRemove)                                                                      // 1116\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :                                                  // 1117\n        callbackRemove()                                                                                               // 1118\n                                                                                                                       // 1119\n    } else if (callback) {                                                                                             // 1120\n      callback()                                                                                                       // 1121\n    }                                                                                                                  // 1122\n  }                                                                                                                    // 1123\n                                                                                                                       // 1124\n  // these following methods are used to handle overflowing modals                                                     // 1125\n                                                                                                                       // 1126\n  Modal.prototype.handleUpdate = function () {                                                                         // 1127\n    if (this.options.backdrop) this.adjustBackdrop()                                                                   // 1128\n    this.adjustDialog()                                                                                                // 1129\n  }                                                                                                                    // 1130\n                                                                                                                       // 1131\n  Modal.prototype.adjustBackdrop = function () {                                                                       // 1132\n    this.$backdrop                                                                                                     // 1133\n      .css('height', 0)                                                                                                // 1134\n      .css('height', this.$element[0].scrollHeight)                                                                    // 1135\n  }                                                                                                                    // 1136\n                                                                                                                       // 1137\n  Modal.prototype.adjustDialog = function () {                                                                         // 1138\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight                     // 1139\n                                                                                                                       // 1140\n    this.$element.css({                                                                                                // 1141\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',                          // 1142\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''                           // 1143\n    })                                                                                                                 // 1144\n  }                                                                                                                    // 1145\n                                                                                                                       // 1146\n  Modal.prototype.resetAdjustments = function () {                                                                     // 1147\n    this.$element.css({                                                                                                // 1148\n      paddingLeft: '',                                                                                                 // 1149\n      paddingRight: ''                                                                                                 // 1150\n    })                                                                                                                 // 1151\n  }                                                                                                                    // 1152\n                                                                                                                       // 1153\n  Modal.prototype.checkScrollbar = function () {                                                                       // 1154\n    this.bodyIsOverflowing = document.body.scrollHeight > document.documentElement.clientHeight                        // 1155\n    this.scrollbarWidth = this.measureScrollbar()                                                                      // 1156\n  }                                                                                                                    // 1157\n                                                                                                                       // 1158\n  Modal.prototype.setScrollbar = function () {                                                                         // 1159\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)                                                 // 1160\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)                         // 1161\n  }                                                                                                                    // 1162\n                                                                                                                       // 1163\n  Modal.prototype.resetScrollbar = function () {                                                                       // 1164\n    this.$body.css('padding-right', '')                                                                                // 1165\n  }                                                                                                                    // 1166\n                                                                                                                       // 1167\n  Modal.prototype.measureScrollbar = function () { // thx walsh                                                        // 1168\n    var scrollDiv = document.createElement('div')                                                                      // 1169\n    scrollDiv.className = 'modal-scrollbar-measure'                                                                    // 1170\n    this.$body.append(scrollDiv)                                                                                       // 1171\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth                                                 // 1172\n    this.$body[0].removeChild(scrollDiv)                                                                               // 1173\n    return scrollbarWidth                                                                                              // 1174\n  }                                                                                                                    // 1175\n                                                                                                                       // 1176\n                                                                                                                       // 1177\n  // MODAL PLUGIN DEFINITION                                                                                           // 1178\n  // =======================                                                                                           // 1179\n                                                                                                                       // 1180\n  function Plugin(option, _relatedTarget) {                                                                            // 1181\n    return this.each(function () {                                                                                     // 1182\n      var $this   = $(this)                                                                                            // 1183\n      var data    = $this.data('bs.modal')                                                                             // 1184\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)                    // 1185\n                                                                                                                       // 1186\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))                                             // 1187\n      if (typeof option == 'string') data[option](_relatedTarget)                                                      // 1188\n      else if (options.show) data.show(_relatedTarget)                                                                 // 1189\n    })                                                                                                                 // 1190\n  }                                                                                                                    // 1191\n                                                                                                                       // 1192\n  var old = $.fn.modal                                                                                                 // 1193\n                                                                                                                       // 1194\n  $.fn.modal             = Plugin                                                                                      // 1195\n  $.fn.modal.Constructor = Modal                                                                                       // 1196\n                                                                                                                       // 1197\n                                                                                                                       // 1198\n  // MODAL NO CONFLICT                                                                                                 // 1199\n  // =================                                                                                                 // 1200\n                                                                                                                       // 1201\n  $.fn.modal.noConflict = function () {                                                                                // 1202\n    $.fn.modal = old                                                                                                   // 1203\n    return this                                                                                                        // 1204\n  }                                                                                                                    // 1205\n                                                                                                                       // 1206\n                                                                                                                       // 1207\n  // MODAL DATA-API                                                                                                    // 1208\n  // ==============                                                                                                    // 1209\n                                                                                                                       // 1210\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {                                    // 1211\n    var $this   = $(this)                                                                                              // 1212\n    var href    = $this.attr('href')                                                                                   // 1213\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7        // 1214\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n                                                                                                                       // 1216\n    if ($this.is('a')) e.preventDefault()                                                                              // 1217\n                                                                                                                       // 1218\n    $target.one('show.bs.modal', function (showEvent) {                                                                // 1219\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown      // 1220\n      $target.one('hidden.bs.modal', function () {                                                                     // 1221\n        $this.is(':visible') && $this.trigger('focus')                                                                 // 1222\n      })                                                                                                               // 1223\n    })                                                                                                                 // 1224\n    Plugin.call($target, option, this)                                                                                 // 1225\n  })                                                                                                                   // 1226\n                                                                                                                       // 1227\n}(jQuery);                                                                                                             // 1228\n                                                                                                                       // 1229\n/* ========================================================================                                            // 1230\n * Bootstrap: tooltip.js v3.3.1                                                                                        // 1231\n * http://getbootstrap.com/javascript/#tooltip                                                                         // 1232\n * Inspired by the original jQuery.tipsy by Jason Frame                                                                // 1233\n * ========================================================================                                            // 1234\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 1235\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1236\n * ======================================================================== */                                         // 1237\n                                                                                                                       // 1238\n                                                                                                                       // 1239\n+function ($) {                                                                                                        // 1240\n  'use strict';                                                                                                        // 1241\n                                                                                                                       // 1242\n  // TOOLTIP PUBLIC CLASS DEFINITION                                                                                   // 1243\n  // ===============================                                                                                   // 1244\n                                                                                                                       // 1245\n  var Tooltip = function (element, options) {                                                                          // 1246\n    this.type       =                                                                                                  // 1247\n    this.options    =                                                                                                  // 1248\n    this.enabled    =                                                                                                  // 1249\n    this.timeout    =                                                                                                  // 1250\n    this.hoverState =                                                                                                  // 1251\n    this.$element   = null                                                                                             // 1252\n                                                                                                                       // 1253\n    this.init('tooltip', element, options)                                                                             // 1254\n  }                                                                                                                    // 1255\n                                                                                                                       // 1256\n  Tooltip.VERSION  = '3.3.1'                                                                                           // 1257\n                                                                                                                       // 1258\n  Tooltip.TRANSITION_DURATION = 150                                                                                    // 1259\n                                                                                                                       // 1260\n  Tooltip.DEFAULTS = {                                                                                                 // 1261\n    animation: true,                                                                                                   // 1262\n    placement: 'top',                                                                                                  // 1263\n    selector: false,                                                                                                   // 1264\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',                                                                                            // 1266\n    title: '',                                                                                                         // 1267\n    delay: 0,                                                                                                          // 1268\n    html: false,                                                                                                       // 1269\n    container: false,                                                                                                  // 1270\n    viewport: {                                                                                                        // 1271\n      selector: 'body',                                                                                                // 1272\n      padding: 0                                                                                                       // 1273\n    }                                                                                                                  // 1274\n  }                                                                                                                    // 1275\n                                                                                                                       // 1276\n  Tooltip.prototype.init = function (type, element, options) {                                                         // 1277\n    this.enabled   = true                                                                                              // 1278\n    this.type      = type                                                                                              // 1279\n    this.$element  = $(element)                                                                                        // 1280\n    this.options   = this.getOptions(options)                                                                          // 1281\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)               // 1282\n                                                                                                                       // 1283\n    var triggers = this.options.trigger.split(' ')                                                                     // 1284\n                                                                                                                       // 1285\n    for (var i = triggers.length; i--;) {                                                                              // 1286\n      var trigger = triggers[i]                                                                                        // 1287\n                                                                                                                       // 1288\n      if (trigger == 'click') {                                                                                        // 1289\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))                      // 1290\n      } else if (trigger != 'manual') {                                                                                // 1291\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'                                                   // 1292\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'                                                  // 1293\n                                                                                                                       // 1294\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))                 // 1295\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))                 // 1296\n      }                                                                                                                // 1297\n    }                                                                                                                  // 1298\n                                                                                                                       // 1299\n    this.options.selector ?                                                                                            // 1300\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :                              // 1301\n      this.fixTitle()                                                                                                  // 1302\n  }                                                                                                                    // 1303\n                                                                                                                       // 1304\n  Tooltip.prototype.getDefaults = function () {                                                                        // 1305\n    return Tooltip.DEFAULTS                                                                                            // 1306\n  }                                                                                                                    // 1307\n                                                                                                                       // 1308\n  Tooltip.prototype.getOptions = function (options) {                                                                  // 1309\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)                                          // 1310\n                                                                                                                       // 1311\n    if (options.delay && typeof options.delay == 'number') {                                                           // 1312\n      options.delay = {                                                                                                // 1313\n        show: options.delay,                                                                                           // 1314\n        hide: options.delay                                                                                            // 1315\n      }                                                                                                                // 1316\n    }                                                                                                                  // 1317\n                                                                                                                       // 1318\n    return options                                                                                                     // 1319\n  }                                                                                                                    // 1320\n                                                                                                                       // 1321\n  Tooltip.prototype.getDelegateOptions = function () {                                                                 // 1322\n    var options  = {}                                                                                                  // 1323\n    var defaults = this.getDefaults()                                                                                  // 1324\n                                                                                                                       // 1325\n    this._options && $.each(this._options, function (key, value) {                                                     // 1326\n      if (defaults[key] != value) options[key] = value                                                                 // 1327\n    })                                                                                                                 // 1328\n                                                                                                                       // 1329\n    return options                                                                                                     // 1330\n  }                                                                                                                    // 1331\n                                                                                                                       // 1332\n  Tooltip.prototype.enter = function (obj) {                                                                           // 1333\n    var self = obj instanceof this.constructor ?                                                                       // 1334\n      obj : $(obj.currentTarget).data('bs.' + this.type)                                                               // 1335\n                                                                                                                       // 1336\n    if (self && self.$tip && self.$tip.is(':visible')) {                                                               // 1337\n      self.hoverState = 'in'                                                                                           // 1338\n      return                                                                                                           // 1339\n    }                                                                                                                  // 1340\n                                                                                                                       // 1341\n    if (!self) {                                                                                                       // 1342\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())                                        // 1343\n      $(obj.currentTarget).data('bs.' + this.type, self)                                                               // 1344\n    }                                                                                                                  // 1345\n                                                                                                                       // 1346\n    clearTimeout(self.timeout)                                                                                         // 1347\n                                                                                                                       // 1348\n    self.hoverState = 'in'                                                                                             // 1349\n                                                                                                                       // 1350\n    if (!self.options.delay || !self.options.delay.show) return self.show()                                            // 1351\n                                                                                                                       // 1352\n    self.timeout = setTimeout(function () {                                                                            // 1353\n      if (self.hoverState == 'in') self.show()                                                                         // 1354\n    }, self.options.delay.show)                                                                                        // 1355\n  }                                                                                                                    // 1356\n                                                                                                                       // 1357\n  Tooltip.prototype.leave = function (obj) {                                                                           // 1358\n    var self = obj instanceof this.constructor ?                                                                       // 1359\n      obj : $(obj.currentTarget).data('bs.' + this.type)                                                               // 1360\n                                                                                                                       // 1361\n    if (!self) {                                                                                                       // 1362\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())                                        // 1363\n      $(obj.currentTarget).data('bs.' + this.type, self)                                                               // 1364\n    }                                                                                                                  // 1365\n                                                                                                                       // 1366\n    clearTimeout(self.timeout)                                                                                         // 1367\n                                                                                                                       // 1368\n    self.hoverState = 'out'                                                                                            // 1369\n                                                                                                                       // 1370\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()                                            // 1371\n                                                                                                                       // 1372\n    self.timeout = setTimeout(function () {                                                                            // 1373\n      if (self.hoverState == 'out') self.hide()                                                                        // 1374\n    }, self.options.delay.hide)                                                                                        // 1375\n  }                                                                                                                    // 1376\n                                                                                                                       // 1377\n  Tooltip.prototype.show = function () {                                                                               // 1378\n    var e = $.Event('show.bs.' + this.type)                                                                            // 1379\n                                                                                                                       // 1380\n    if (this.hasContent() && this.enabled) {                                                                           // 1381\n      this.$element.trigger(e)                                                                                         // 1382\n                                                                                                                       // 1383\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])                         // 1384\n      if (e.isDefaultPrevented() || !inDom) return                                                                     // 1385\n      var that = this                                                                                                  // 1386\n                                                                                                                       // 1387\n      var $tip = this.tip()                                                                                            // 1388\n                                                                                                                       // 1389\n      var tipId = this.getUID(this.type)                                                                               // 1390\n                                                                                                                       // 1391\n      this.setContent()                                                                                                // 1392\n      $tip.attr('id', tipId)                                                                                           // 1393\n      this.$element.attr('aria-describedby', tipId)                                                                    // 1394\n                                                                                                                       // 1395\n      if (this.options.animation) $tip.addClass('fade')                                                                // 1396\n                                                                                                                       // 1397\n      var placement = typeof this.options.placement == 'function' ?                                                    // 1398\n        this.options.placement.call(this, $tip[0], this.$element[0]) :                                                 // 1399\n        this.options.placement                                                                                         // 1400\n                                                                                                                       // 1401\n      var autoToken = /\\s?auto?\\s?/i                                                                                   // 1402\n      var autoPlace = autoToken.test(placement)                                                                        // 1403\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'                                             // 1404\n                                                                                                                       // 1405\n      $tip                                                                                                             // 1406\n        .detach()                                                                                                      // 1407\n        .css({ top: 0, left: 0, display: 'block' })                                                                    // 1408\n        .addClass(placement)                                                                                           // 1409\n        .data('bs.' + this.type, this)                                                                                 // 1410\n                                                                                                                       // 1411\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)                 // 1412\n                                                                                                                       // 1413\n      var pos          = this.getPosition()                                                                            // 1414\n      var actualWidth  = $tip[0].offsetWidth                                                                           // 1415\n      var actualHeight = $tip[0].offsetHeight                                                                          // 1416\n                                                                                                                       // 1417\n      if (autoPlace) {                                                                                                 // 1418\n        var orgPlacement = placement                                                                                   // 1419\n        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()                 // 1420\n        var containerDim = this.getPosition($container)                                                                // 1421\n                                                                                                                       // 1422\n        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :              // 1423\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :              // 1424\n                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :              // 1425\n                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :              // 1426\n                    placement                                                                                          // 1427\n                                                                                                                       // 1428\n        $tip                                                                                                           // 1429\n          .removeClass(orgPlacement)                                                                                   // 1430\n          .addClass(placement)                                                                                         // 1431\n      }                                                                                                                // 1432\n                                                                                                                       // 1433\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)                       // 1434\n                                                                                                                       // 1435\n      this.applyPlacement(calculatedOffset, placement)                                                                 // 1436\n                                                                                                                       // 1437\n      var complete = function () {                                                                                     // 1438\n        var prevHoverState = that.hoverState                                                                           // 1439\n        that.$element.trigger('shown.bs.' + that.type)                                                                 // 1440\n        that.hoverState = null                                                                                         // 1441\n                                                                                                                       // 1442\n        if (prevHoverState == 'out') that.leave(that)                                                                  // 1443\n      }                                                                                                                // 1444\n                                                                                                                       // 1445\n      $.support.transition && this.$tip.hasClass('fade') ?                                                             // 1446\n        $tip                                                                                                           // 1447\n          .one('bsTransitionEnd', complete)                                                                            // 1448\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :                                                         // 1449\n        complete()                                                                                                     // 1450\n    }                                                                                                                  // 1451\n  }                                                                                                                    // 1452\n                                                                                                                       // 1453\n  Tooltip.prototype.applyPlacement = function (offset, placement) {                                                    // 1454\n    var $tip   = this.tip()                                                                                            // 1455\n    var width  = $tip[0].offsetWidth                                                                                   // 1456\n    var height = $tip[0].offsetHeight                                                                                  // 1457\n                                                                                                                       // 1458\n    // manually read margins because getBoundingClientRect includes difference                                         // 1459\n    var marginTop = parseInt($tip.css('margin-top'), 10)                                                               // 1460\n    var marginLeft = parseInt($tip.css('margin-left'), 10)                                                             // 1461\n                                                                                                                       // 1462\n    // we must check for NaN for ie 8/9                                                                                // 1463\n    if (isNaN(marginTop))  marginTop  = 0                                                                              // 1464\n    if (isNaN(marginLeft)) marginLeft = 0                                                                              // 1465\n                                                                                                                       // 1466\n    offset.top  = offset.top  + marginTop                                                                              // 1467\n    offset.left = offset.left + marginLeft                                                                             // 1468\n                                                                                                                       // 1469\n    // $.fn.offset doesn't round pixel values                                                                          // 1470\n    // so we use setOffset directly with our own function B-0                                                          // 1471\n    $.offset.setOffset($tip[0], $.extend({                                                                             // 1472\n      using: function (props) {                                                                                        // 1473\n        $tip.css({                                                                                                     // 1474\n          top: Math.round(props.top),                                                                                  // 1475\n          left: Math.round(props.left)                                                                                 // 1476\n        })                                                                                                             // 1477\n      }                                                                                                                // 1478\n    }, offset), 0)                                                                                                     // 1479\n                                                                                                                       // 1480\n    $tip.addClass('in')                                                                                                // 1481\n                                                                                                                       // 1482\n    // check to see if placing tip in new offset caused the tip to resize itself                                       // 1483\n    var actualWidth  = $tip[0].offsetWidth                                                                             // 1484\n    var actualHeight = $tip[0].offsetHeight                                                                            // 1485\n                                                                                                                       // 1486\n    if (placement == 'top' && actualHeight != height) {                                                                // 1487\n      offset.top = offset.top + height - actualHeight                                                                  // 1488\n    }                                                                                                                  // 1489\n                                                                                                                       // 1490\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)                            // 1491\n                                                                                                                       // 1492\n    if (delta.left) offset.left += delta.left                                                                          // 1493\n    else offset.top += delta.top                                                                                       // 1494\n                                                                                                                       // 1495\n    var isVertical          = /top|bottom/.test(placement)                                                             // 1496\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'                                              // 1498\n                                                                                                                       // 1499\n    $tip.offset(offset)                                                                                                // 1500\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)                                            // 1501\n  }                                                                                                                    // 1502\n                                                                                                                       // 1503\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {                                         // 1504\n    this.arrow()                                                                                                       // 1505\n      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')                                          // 1506\n      .css(isHorizontal ? 'top' : 'left', '')                                                                          // 1507\n  }                                                                                                                    // 1508\n                                                                                                                       // 1509\n  Tooltip.prototype.setContent = function () {                                                                         // 1510\n    var $tip  = this.tip()                                                                                             // 1511\n    var title = this.getTitle()                                                                                        // 1512\n                                                                                                                       // 1513\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)                                            // 1514\n    $tip.removeClass('fade in top bottom left right')                                                                  // 1515\n  }                                                                                                                    // 1516\n                                                                                                                       // 1517\n  Tooltip.prototype.hide = function (callback) {                                                                       // 1518\n    var that = this                                                                                                    // 1519\n    var $tip = this.tip()                                                                                              // 1520\n    var e    = $.Event('hide.bs.' + this.type)                                                                         // 1521\n                                                                                                                       // 1522\n    function complete() {                                                                                              // 1523\n      if (that.hoverState != 'in') $tip.detach()                                                                       // 1524\n      that.$element                                                                                                    // 1525\n        .removeAttr('aria-describedby')                                                                                // 1526\n        .trigger('hidden.bs.' + that.type)                                                                             // 1527\n      callback && callback()                                                                                           // 1528\n    }                                                                                                                  // 1529\n                                                                                                                       // 1530\n    this.$element.trigger(e)                                                                                           // 1531\n                                                                                                                       // 1532\n    if (e.isDefaultPrevented()) return                                                                                 // 1533\n                                                                                                                       // 1534\n    $tip.removeClass('in')                                                                                             // 1535\n                                                                                                                       // 1536\n    $.support.transition && this.$tip.hasClass('fade') ?                                                               // 1537\n      $tip                                                                                                             // 1538\n        .one('bsTransitionEnd', complete)                                                                              // 1539\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :                                                           // 1540\n      complete()                                                                                                       // 1541\n                                                                                                                       // 1542\n    this.hoverState = null                                                                                             // 1543\n                                                                                                                       // 1544\n    return this                                                                                                        // 1545\n  }                                                                                                                    // 1546\n                                                                                                                       // 1547\n  Tooltip.prototype.fixTitle = function () {                                                                           // 1548\n    var $e = this.$element                                                                                             // 1549\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {                                     // 1550\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')                                         // 1551\n    }                                                                                                                  // 1552\n  }                                                                                                                    // 1553\n                                                                                                                       // 1554\n  Tooltip.prototype.hasContent = function () {                                                                         // 1555\n    return this.getTitle()                                                                                             // 1556\n  }                                                                                                                    // 1557\n                                                                                                                       // 1558\n  Tooltip.prototype.getPosition = function ($element) {                                                                // 1559\n    $element   = $element || this.$element                                                                             // 1560\n                                                                                                                       // 1561\n    var el     = $element[0]                                                                                           // 1562\n    var isBody = el.tagName == 'BODY'                                                                                  // 1563\n                                                                                                                       // 1564\n    var elRect    = el.getBoundingClientRect()                                                                         // 1565\n    if (elRect.width == null) {                                                                                        // 1566\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })         // 1568\n    }                                                                                                                  // 1569\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()                                                   // 1570\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null                           // 1572\n                                                                                                                       // 1573\n    return $.extend({}, elRect, scroll, outerDims, elOffset)                                                           // 1574\n  }                                                                                                                    // 1575\n                                                                                                                       // 1576\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {                       // 1577\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }  // 1581\n                                                                                                                       // 1582\n  }                                                                                                                    // 1583\n                                                                                                                       // 1584\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {                  // 1585\n    var delta = { top: 0, left: 0 }                                                                                    // 1586\n    if (!this.$viewport) return delta                                                                                  // 1587\n                                                                                                                       // 1588\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0                                  // 1589\n    var viewportDimensions = this.getPosition(this.$viewport)                                                          // 1590\n                                                                                                                       // 1591\n    if (/right|left/.test(placement)) {                                                                                // 1592\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll                                     // 1593\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight                      // 1594\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow                                                    // 1595\n        delta.top = viewportDimensions.top - topEdgeOffset                                                             // 1596\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow           // 1597\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset                              // 1598\n      }                                                                                                                // 1599\n    } else {                                                                                                           // 1600\n      var leftEdgeOffset  = pos.left - viewportPadding                                                                 // 1601\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth                                                   // 1602\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow                                                 // 1603\n        delta.left = viewportDimensions.left - leftEdgeOffset                                                          // 1604\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow                                       // 1605\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset                              // 1606\n      }                                                                                                                // 1607\n    }                                                                                                                  // 1608\n                                                                                                                       // 1609\n    return delta                                                                                                       // 1610\n  }                                                                                                                    // 1611\n                                                                                                                       // 1612\n  Tooltip.prototype.getTitle = function () {                                                                           // 1613\n    var title                                                                                                          // 1614\n    var $e = this.$element                                                                                             // 1615\n    var o  = this.options                                                                                              // 1616\n                                                                                                                       // 1617\n    title = $e.attr('data-original-title')                                                                             // 1618\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)                                               // 1619\n                                                                                                                       // 1620\n    return title                                                                                                       // 1621\n  }                                                                                                                    // 1622\n                                                                                                                       // 1623\n  Tooltip.prototype.getUID = function (prefix) {                                                                       // 1624\n    do prefix += ~~(Math.random() * 1000000)                                                                           // 1625\n    while (document.getElementById(prefix))                                                                            // 1626\n    return prefix                                                                                                      // 1627\n  }                                                                                                                    // 1628\n                                                                                                                       // 1629\n  Tooltip.prototype.tip = function () {                                                                                // 1630\n    return (this.$tip = this.$tip || $(this.options.template))                                                         // 1631\n  }                                                                                                                    // 1632\n                                                                                                                       // 1633\n  Tooltip.prototype.arrow = function () {                                                                              // 1634\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))                                            // 1635\n  }                                                                                                                    // 1636\n                                                                                                                       // 1637\n  Tooltip.prototype.enable = function () {                                                                             // 1638\n    this.enabled = true                                                                                                // 1639\n  }                                                                                                                    // 1640\n                                                                                                                       // 1641\n  Tooltip.prototype.disable = function () {                                                                            // 1642\n    this.enabled = false                                                                                               // 1643\n  }                                                                                                                    // 1644\n                                                                                                                       // 1645\n  Tooltip.prototype.toggleEnabled = function () {                                                                      // 1646\n    this.enabled = !this.enabled                                                                                       // 1647\n  }                                                                                                                    // 1648\n                                                                                                                       // 1649\n  Tooltip.prototype.toggle = function (e) {                                                                            // 1650\n    var self = this                                                                                                    // 1651\n    if (e) {                                                                                                           // 1652\n      self = $(e.currentTarget).data('bs.' + this.type)                                                                // 1653\n      if (!self) {                                                                                                     // 1654\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())                                        // 1655\n        $(e.currentTarget).data('bs.' + this.type, self)                                                               // 1656\n      }                                                                                                                // 1657\n    }                                                                                                                  // 1658\n                                                                                                                       // 1659\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)                                                    // 1660\n  }                                                                                                                    // 1661\n                                                                                                                       // 1662\n  Tooltip.prototype.destroy = function () {                                                                            // 1663\n    var that = this                                                                                                    // 1664\n    clearTimeout(this.timeout)                                                                                         // 1665\n    this.hide(function () {                                                                                            // 1666\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)                                                 // 1667\n    })                                                                                                                 // 1668\n  }                                                                                                                    // 1669\n                                                                                                                       // 1670\n                                                                                                                       // 1671\n  // TOOLTIP PLUGIN DEFINITION                                                                                         // 1672\n  // =========================                                                                                         // 1673\n                                                                                                                       // 1674\n  function Plugin(option) {                                                                                            // 1675\n    return this.each(function () {                                                                                     // 1676\n      var $this    = $(this)                                                                                           // 1677\n      var data     = $this.data('bs.tooltip')                                                                          // 1678\n      var options  = typeof option == 'object' && option                                                               // 1679\n      var selector = options && options.selector                                                                       // 1680\n                                                                                                                       // 1681\n      if (!data && option == 'destroy') return                                                                         // 1682\n      if (selector) {                                                                                                  // 1683\n        if (!data) $this.data('bs.tooltip', (data = {}))                                                               // 1684\n        if (!data[selector]) data[selector] = new Tooltip(this, options)                                               // 1685\n      } else {                                                                                                         // 1686\n        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))                                       // 1687\n      }                                                                                                                // 1688\n      if (typeof option == 'string') data[option]()                                                                    // 1689\n    })                                                                                                                 // 1690\n  }                                                                                                                    // 1691\n                                                                                                                       // 1692\n  var old = $.fn.tooltip                                                                                               // 1693\n                                                                                                                       // 1694\n  $.fn.tooltip             = Plugin                                                                                    // 1695\n  $.fn.tooltip.Constructor = Tooltip                                                                                   // 1696\n                                                                                                                       // 1697\n                                                                                                                       // 1698\n  // TOOLTIP NO CONFLICT                                                                                               // 1699\n  // ===================                                                                                               // 1700\n                                                                                                                       // 1701\n  $.fn.tooltip.noConflict = function () {                                                                              // 1702\n    $.fn.tooltip = old                                                                                                 // 1703\n    return this                                                                                                        // 1704\n  }                                                                                                                    // 1705\n                                                                                                                       // 1706\n}(jQuery);                                                                                                             // 1707\n                                                                                                                       // 1708\n/* ========================================================================                                            // 1709\n * Bootstrap: popover.js v3.3.1                                                                                        // 1710\n * http://getbootstrap.com/javascript/#popovers                                                                        // 1711\n * ========================================================================                                            // 1712\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 1713\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1714\n * ======================================================================== */                                         // 1715\n                                                                                                                       // 1716\n                                                                                                                       // 1717\n+function ($) {                                                                                                        // 1718\n  'use strict';                                                                                                        // 1719\n                                                                                                                       // 1720\n  // POPOVER PUBLIC CLASS DEFINITION                                                                                   // 1721\n  // ===============================                                                                                   // 1722\n                                                                                                                       // 1723\n  var Popover = function (element, options) {                                                                          // 1724\n    this.init('popover', element, options)                                                                             // 1725\n  }                                                                                                                    // 1726\n                                                                                                                       // 1727\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')                                                    // 1728\n                                                                                                                       // 1729\n  Popover.VERSION  = '3.3.1'                                                                                           // 1730\n                                                                                                                       // 1731\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {                                                 // 1732\n    placement: 'right',                                                                                                // 1733\n    trigger: 'click',                                                                                                  // 1734\n    content: '',                                                                                                       // 1735\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })                                                                                                                   // 1737\n                                                                                                                       // 1738\n                                                                                                                       // 1739\n  // NOTE: POPOVER EXTENDS tooltip.js                                                                                  // 1740\n  // ================================                                                                                  // 1741\n                                                                                                                       // 1742\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)                                                 // 1743\n                                                                                                                       // 1744\n  Popover.prototype.constructor = Popover                                                                              // 1745\n                                                                                                                       // 1746\n  Popover.prototype.getDefaults = function () {                                                                        // 1747\n    return Popover.DEFAULTS                                                                                            // 1748\n  }                                                                                                                    // 1749\n                                                                                                                       // 1750\n  Popover.prototype.setContent = function () {                                                                         // 1751\n    var $tip    = this.tip()                                                                                           // 1752\n    var title   = this.getTitle()                                                                                      // 1753\n    var content = this.getContent()                                                                                    // 1754\n                                                                                                                       // 1755\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)                                            // 1756\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events   // 1757\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'                                    // 1758\n    ](content)                                                                                                         // 1759\n                                                                                                                       // 1760\n    $tip.removeClass('fade top bottom left right in')                                                                  // 1761\n                                                                                                                       // 1762\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do                                       // 1763\n    // this manually by checking the contents.                                                                         // 1764\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()                                        // 1765\n  }                                                                                                                    // 1766\n                                                                                                                       // 1767\n  Popover.prototype.hasContent = function () {                                                                         // 1768\n    return this.getTitle() || this.getContent()                                                                        // 1769\n  }                                                                                                                    // 1770\n                                                                                                                       // 1771\n  Popover.prototype.getContent = function () {                                                                         // 1772\n    var $e = this.$element                                                                                             // 1773\n    var o  = this.options                                                                                              // 1774\n                                                                                                                       // 1775\n    return $e.attr('data-content')                                                                                     // 1776\n      || (typeof o.content == 'function' ?                                                                             // 1777\n            o.content.call($e[0]) :                                                                                    // 1778\n            o.content)                                                                                                 // 1779\n  }                                                                                                                    // 1780\n                                                                                                                       // 1781\n  Popover.prototype.arrow = function () {                                                                              // 1782\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))                                                    // 1783\n  }                                                                                                                    // 1784\n                                                                                                                       // 1785\n  Popover.prototype.tip = function () {                                                                                // 1786\n    if (!this.$tip) this.$tip = $(this.options.template)                                                               // 1787\n    return this.$tip                                                                                                   // 1788\n  }                                                                                                                    // 1789\n                                                                                                                       // 1790\n                                                                                                                       // 1791\n  // POPOVER PLUGIN DEFINITION                                                                                         // 1792\n  // =========================                                                                                         // 1793\n                                                                                                                       // 1794\n  function Plugin(option) {                                                                                            // 1795\n    return this.each(function () {                                                                                     // 1796\n      var $this    = $(this)                                                                                           // 1797\n      var data     = $this.data('bs.popover')                                                                          // 1798\n      var options  = typeof option == 'object' && option                                                               // 1799\n      var selector = options && options.selector                                                                       // 1800\n                                                                                                                       // 1801\n      if (!data && option == 'destroy') return                                                                         // 1802\n      if (selector) {                                                                                                  // 1803\n        if (!data) $this.data('bs.popover', (data = {}))                                                               // 1804\n        if (!data[selector]) data[selector] = new Popover(this, options)                                               // 1805\n      } else {                                                                                                         // 1806\n        if (!data) $this.data('bs.popover', (data = new Popover(this, options)))                                       // 1807\n      }                                                                                                                // 1808\n      if (typeof option == 'string') data[option]()                                                                    // 1809\n    })                                                                                                                 // 1810\n  }                                                                                                                    // 1811\n                                                                                                                       // 1812\n  var old = $.fn.popover                                                                                               // 1813\n                                                                                                                       // 1814\n  $.fn.popover             = Plugin                                                                                    // 1815\n  $.fn.popover.Constructor = Popover                                                                                   // 1816\n                                                                                                                       // 1817\n                                                                                                                       // 1818\n  // POPOVER NO CONFLICT                                                                                               // 1819\n  // ===================                                                                                               // 1820\n                                                                                                                       // 1821\n  $.fn.popover.noConflict = function () {                                                                              // 1822\n    $.fn.popover = old                                                                                                 // 1823\n    return this                                                                                                        // 1824\n  }                                                                                                                    // 1825\n                                                                                                                       // 1826\n}(jQuery);                                                                                                             // 1827\n                                                                                                                       // 1828\n/* ========================================================================                                            // 1829\n * Bootstrap: scrollspy.js v3.3.1                                                                                      // 1830\n * http://getbootstrap.com/javascript/#scrollspy                                                                       // 1831\n * ========================================================================                                            // 1832\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 1833\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1834\n * ======================================================================== */                                         // 1835\n                                                                                                                       // 1836\n                                                                                                                       // 1837\n+function ($) {                                                                                                        // 1838\n  'use strict';                                                                                                        // 1839\n                                                                                                                       // 1840\n  // SCROLLSPY CLASS DEFINITION                                                                                        // 1841\n  // ==========================                                                                                        // 1842\n                                                                                                                       // 1843\n  function ScrollSpy(element, options) {                                                                               // 1844\n    var process  = $.proxy(this.process, this)                                                                         // 1845\n                                                                                                                       // 1846\n    this.$body          = $('body')                                                                                    // 1847\n    this.$scrollElement = $(element).is('body') ? $(window) : $(element)                                               // 1848\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)                                                    // 1849\n    this.selector       = (this.options.target || '') + ' .nav li > a'                                                 // 1850\n    this.offsets        = []                                                                                           // 1851\n    this.targets        = []                                                                                           // 1852\n    this.activeTarget   = null                                                                                         // 1853\n    this.scrollHeight   = 0                                                                                            // 1854\n                                                                                                                       // 1855\n    this.$scrollElement.on('scroll.bs.scrollspy', process)                                                             // 1856\n    this.refresh()                                                                                                     // 1857\n    this.process()                                                                                                     // 1858\n  }                                                                                                                    // 1859\n                                                                                                                       // 1860\n  ScrollSpy.VERSION  = '3.3.1'                                                                                         // 1861\n                                                                                                                       // 1862\n  ScrollSpy.DEFAULTS = {                                                                                               // 1863\n    offset: 10                                                                                                         // 1864\n  }                                                                                                                    // 1865\n                                                                                                                       // 1866\n  ScrollSpy.prototype.getScrollHeight = function () {                                                                  // 1867\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }                                                                                                                    // 1869\n                                                                                                                       // 1870\n  ScrollSpy.prototype.refresh = function () {                                                                          // 1871\n    var offsetMethod = 'offset'                                                                                        // 1872\n    var offsetBase   = 0                                                                                               // 1873\n                                                                                                                       // 1874\n    if (!$.isWindow(this.$scrollElement[0])) {                                                                         // 1875\n      offsetMethod = 'position'                                                                                        // 1876\n      offsetBase   = this.$scrollElement.scrollTop()                                                                   // 1877\n    }                                                                                                                  // 1878\n                                                                                                                       // 1879\n    this.offsets = []                                                                                                  // 1880\n    this.targets = []                                                                                                  // 1881\n    this.scrollHeight = this.getScrollHeight()                                                                         // 1882\n                                                                                                                       // 1883\n    var self     = this                                                                                                // 1884\n                                                                                                                       // 1885\n    this.$body                                                                                                         // 1886\n      .find(this.selector)                                                                                             // 1887\n      .map(function () {                                                                                               // 1888\n        var $el   = $(this)                                                                                            // 1889\n        var href  = $el.data('target') || $el.attr('href')                                                             // 1890\n        var $href = /^#./.test(href) && $(href)                                                                        // 1891\n                                                                                                                       // 1892\n        return ($href                                                                                                  // 1893\n          && $href.length                                                                                              // 1894\n          && $href.is(':visible')                                                                                      // 1895\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null                                                 // 1896\n      })                                                                                                               // 1897\n      .sort(function (a, b) { return a[0] - b[0] })                                                                    // 1898\n      .each(function () {                                                                                              // 1899\n        self.offsets.push(this[0])                                                                                     // 1900\n        self.targets.push(this[1])                                                                                     // 1901\n      })                                                                                                               // 1902\n  }                                                                                                                    // 1903\n                                                                                                                       // 1904\n  ScrollSpy.prototype.process = function () {                                                                          // 1905\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset                                           // 1906\n    var scrollHeight = this.getScrollHeight()                                                                          // 1907\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()                               // 1908\n    var offsets      = this.offsets                                                                                    // 1909\n    var targets      = this.targets                                                                                    // 1910\n    var activeTarget = this.activeTarget                                                                               // 1911\n    var i                                                                                                              // 1912\n                                                                                                                       // 1913\n    if (this.scrollHeight != scrollHeight) {                                                                           // 1914\n      this.refresh()                                                                                                   // 1915\n    }                                                                                                                  // 1916\n                                                                                                                       // 1917\n    if (scrollTop >= maxScroll) {                                                                                      // 1918\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)                                     // 1919\n    }                                                                                                                  // 1920\n                                                                                                                       // 1921\n    if (activeTarget && scrollTop < offsets[0]) {                                                                      // 1922\n      this.activeTarget = null                                                                                         // 1923\n      return this.clear()                                                                                              // 1924\n    }                                                                                                                  // 1925\n                                                                                                                       // 1926\n    for (i = offsets.length; i--;) {                                                                                   // 1927\n      activeTarget != targets[i]                                                                                       // 1928\n        && scrollTop >= offsets[i]                                                                                     // 1929\n        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])                                                            // 1930\n        && this.activate(targets[i])                                                                                   // 1931\n    }                                                                                                                  // 1932\n  }                                                                                                                    // 1933\n                                                                                                                       // 1934\n  ScrollSpy.prototype.activate = function (target) {                                                                   // 1935\n    this.activeTarget = target                                                                                         // 1936\n                                                                                                                       // 1937\n    this.clear()                                                                                                       // 1938\n                                                                                                                       // 1939\n    var selector = this.selector +                                                                                     // 1940\n        '[data-target=\"' + target + '\"],' +                                                                            // 1941\n        this.selector + '[href=\"' + target + '\"]'                                                                      // 1942\n                                                                                                                       // 1943\n    var active = $(selector)                                                                                           // 1944\n      .parents('li')                                                                                                   // 1945\n      .addClass('active')                                                                                              // 1946\n                                                                                                                       // 1947\n    if (active.parent('.dropdown-menu').length) {                                                                      // 1948\n      active = active                                                                                                  // 1949\n        .closest('li.dropdown')                                                                                        // 1950\n        .addClass('active')                                                                                            // 1951\n    }                                                                                                                  // 1952\n                                                                                                                       // 1953\n    active.trigger('activate.bs.scrollspy')                                                                            // 1954\n  }                                                                                                                    // 1955\n                                                                                                                       // 1956\n  ScrollSpy.prototype.clear = function () {                                                                            // 1957\n    $(this.selector)                                                                                                   // 1958\n      .parentsUntil(this.options.target, '.active')                                                                    // 1959\n      .removeClass('active')                                                                                           // 1960\n  }                                                                                                                    // 1961\n                                                                                                                       // 1962\n                                                                                                                       // 1963\n  // SCROLLSPY PLUGIN DEFINITION                                                                                       // 1964\n  // ===========================                                                                                       // 1965\n                                                                                                                       // 1966\n  function Plugin(option) {                                                                                            // 1967\n    return this.each(function () {                                                                                     // 1968\n      var $this   = $(this)                                                                                            // 1969\n      var data    = $this.data('bs.scrollspy')                                                                         // 1970\n      var options = typeof option == 'object' && option                                                                // 1971\n                                                                                                                       // 1972\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))                                     // 1973\n      if (typeof option == 'string') data[option]()                                                                    // 1974\n    })                                                                                                                 // 1975\n  }                                                                                                                    // 1976\n                                                                                                                       // 1977\n  var old = $.fn.scrollspy                                                                                             // 1978\n                                                                                                                       // 1979\n  $.fn.scrollspy             = Plugin                                                                                  // 1980\n  $.fn.scrollspy.Constructor = ScrollSpy                                                                               // 1981\n                                                                                                                       // 1982\n                                                                                                                       // 1983\n  // SCROLLSPY NO CONFLICT                                                                                             // 1984\n  // =====================                                                                                             // 1985\n                                                                                                                       // 1986\n  $.fn.scrollspy.noConflict = function () {                                                                            // 1987\n    $.fn.scrollspy = old                                                                                               // 1988\n    return this                                                                                                        // 1989\n  }                                                                                                                    // 1990\n                                                                                                                       // 1991\n                                                                                                                       // 1992\n  // SCROLLSPY DATA-API                                                                                                // 1993\n  // ==================                                                                                                // 1994\n                                                                                                                       // 1995\n  $(window).on('load.bs.scrollspy.data-api', function () {                                                             // 1996\n    $('[data-spy=\"scroll\"]').each(function () {                                                                        // 1997\n      var $spy = $(this)                                                                                               // 1998\n      Plugin.call($spy, $spy.data())                                                                                   // 1999\n    })                                                                                                                 // 2000\n  })                                                                                                                   // 2001\n                                                                                                                       // 2002\n}(jQuery);                                                                                                             // 2003\n                                                                                                                       // 2004\n/* ========================================================================                                            // 2005\n * Bootstrap: tab.js v3.3.1                                                                                            // 2006\n * http://getbootstrap.com/javascript/#tabs                                                                            // 2007\n * ========================================================================                                            // 2008\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 2009\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 2010\n * ======================================================================== */                                         // 2011\n                                                                                                                       // 2012\n                                                                                                                       // 2013\n+function ($) {                                                                                                        // 2014\n  'use strict';                                                                                                        // 2015\n                                                                                                                       // 2016\n  // TAB CLASS DEFINITION                                                                                              // 2017\n  // ====================                                                                                              // 2018\n                                                                                                                       // 2019\n  var Tab = function (element) {                                                                                       // 2020\n    this.element = $(element)                                                                                          // 2021\n  }                                                                                                                    // 2022\n                                                                                                                       // 2023\n  Tab.VERSION = '3.3.1'                                                                                                // 2024\n                                                                                                                       // 2025\n  Tab.TRANSITION_DURATION = 150                                                                                        // 2026\n                                                                                                                       // 2027\n  Tab.prototype.show = function () {                                                                                   // 2028\n    var $this    = this.element                                                                                        // 2029\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')                                                             // 2030\n    var selector = $this.data('target')                                                                                // 2031\n                                                                                                                       // 2032\n    if (!selector) {                                                                                                   // 2033\n      selector = $this.attr('href')                                                                                    // 2034\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7                                   // 2035\n    }                                                                                                                  // 2036\n                                                                                                                       // 2037\n    if ($this.parent('li').hasClass('active')) return                                                                  // 2038\n                                                                                                                       // 2039\n    var $previous = $ul.find('.active:last a')                                                                         // 2040\n    var hideEvent = $.Event('hide.bs.tab', {                                                                           // 2041\n      relatedTarget: $this[0]                                                                                          // 2042\n    })                                                                                                                 // 2043\n    var showEvent = $.Event('show.bs.tab', {                                                                           // 2044\n      relatedTarget: $previous[0]                                                                                      // 2045\n    })                                                                                                                 // 2046\n                                                                                                                       // 2047\n    $previous.trigger(hideEvent)                                                                                       // 2048\n    $this.trigger(showEvent)                                                                                           // 2049\n                                                                                                                       // 2050\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return                                       // 2051\n                                                                                                                       // 2052\n    var $target = $(selector)                                                                                          // 2053\n                                                                                                                       // 2054\n    this.activate($this.closest('li'), $ul)                                                                            // 2055\n    this.activate($target, $target.parent(), function () {                                                             // 2056\n      $previous.trigger({                                                                                              // 2057\n        type: 'hidden.bs.tab',                                                                                         // 2058\n        relatedTarget: $this[0]                                                                                        // 2059\n      })                                                                                                               // 2060\n      $this.trigger({                                                                                                  // 2061\n        type: 'shown.bs.tab',                                                                                          // 2062\n        relatedTarget: $previous[0]                                                                                    // 2063\n      })                                                                                                               // 2064\n    })                                                                                                                 // 2065\n  }                                                                                                                    // 2066\n                                                                                                                       // 2067\n  Tab.prototype.activate = function (element, container, callback) {                                                   // 2068\n    var $active    = container.find('> .active')                                                                       // 2069\n    var transition = callback                                                                                          // 2070\n      && $.support.transition                                                                                          // 2071\n      && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)                          // 2072\n                                                                                                                       // 2073\n    function next() {                                                                                                  // 2074\n      $active                                                                                                          // 2075\n        .removeClass('active')                                                                                         // 2076\n        .find('> .dropdown-menu > .active')                                                                            // 2077\n          .removeClass('active')                                                                                       // 2078\n        .end()                                                                                                         // 2079\n        .find('[data-toggle=\"tab\"]')                                                                                   // 2080\n          .attr('aria-expanded', false)                                                                                // 2081\n                                                                                                                       // 2082\n      element                                                                                                          // 2083\n        .addClass('active')                                                                                            // 2084\n        .find('[data-toggle=\"tab\"]')                                                                                   // 2085\n          .attr('aria-expanded', true)                                                                                 // 2086\n                                                                                                                       // 2087\n      if (transition) {                                                                                                // 2088\n        element[0].offsetWidth // reflow for transition                                                                // 2089\n        element.addClass('in')                                                                                         // 2090\n      } else {                                                                                                         // 2091\n        element.removeClass('fade')                                                                                    // 2092\n      }                                                                                                                // 2093\n                                                                                                                       // 2094\n      if (element.parent('.dropdown-menu')) {                                                                          // 2095\n        element                                                                                                        // 2096\n          .closest('li.dropdown')                                                                                      // 2097\n            .addClass('active')                                                                                        // 2098\n          .end()                                                                                                       // 2099\n          .find('[data-toggle=\"tab\"]')                                                                                 // 2100\n            .attr('aria-expanded', true)                                                                               // 2101\n      }                                                                                                                // 2102\n                                                                                                                       // 2103\n      callback && callback()                                                                                           // 2104\n    }                                                                                                                  // 2105\n                                                                                                                       // 2106\n    $active.length && transition ?                                                                                     // 2107\n      $active                                                                                                          // 2108\n        .one('bsTransitionEnd', next)                                                                                  // 2109\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :                                                               // 2110\n      next()                                                                                                           // 2111\n                                                                                                                       // 2112\n    $active.removeClass('in')                                                                                          // 2113\n  }                                                                                                                    // 2114\n                                                                                                                       // 2115\n                                                                                                                       // 2116\n  // TAB PLUGIN DEFINITION                                                                                             // 2117\n  // =====================                                                                                             // 2118\n                                                                                                                       // 2119\n  function Plugin(option) {                                                                                            // 2120\n    return this.each(function () {                                                                                     // 2121\n      var $this = $(this)                                                                                              // 2122\n      var data  = $this.data('bs.tab')                                                                                 // 2123\n                                                                                                                       // 2124\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))                                                          // 2125\n      if (typeof option == 'string') data[option]()                                                                    // 2126\n    })                                                                                                                 // 2127\n  }                                                                                                                    // 2128\n                                                                                                                       // 2129\n  var old = $.fn.tab                                                                                                   // 2130\n                                                                                                                       // 2131\n  $.fn.tab             = Plugin                                                                                        // 2132\n  $.fn.tab.Constructor = Tab                                                                                           // 2133\n                                                                                                                       // 2134\n                                                                                                                       // 2135\n  // TAB NO CONFLICT                                                                                                   // 2136\n  // ===============                                                                                                   // 2137\n                                                                                                                       // 2138\n  $.fn.tab.noConflict = function () {                                                                                  // 2139\n    $.fn.tab = old                                                                                                     // 2140\n    return this                                                                                                        // 2141\n  }                                                                                                                    // 2142\n                                                                                                                       // 2143\n                                                                                                                       // 2144\n  // TAB DATA-API                                                                                                      // 2145\n  // ============                                                                                                      // 2146\n                                                                                                                       // 2147\n  var clickHandler = function (e) {                                                                                    // 2148\n    e.preventDefault()                                                                                                 // 2149\n    Plugin.call($(this), 'show')                                                                                       // 2150\n  }                                                                                                                    // 2151\n                                                                                                                       // 2152\n  $(document)                                                                                                          // 2153\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)                                                  // 2154\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)                                                 // 2155\n                                                                                                                       // 2156\n}(jQuery);                                                                                                             // 2157\n                                                                                                                       // 2158\n/* ========================================================================                                            // 2159\n * Bootstrap: affix.js v3.3.1                                                                                          // 2160\n * http://getbootstrap.com/javascript/#affix                                                                           // 2161\n * ========================================================================                                            // 2162\n * Copyright 2011-2014 Twitter, Inc.                                                                                   // 2163\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 2164\n * ======================================================================== */                                         // 2165\n                                                                                                                       // 2166\n                                                                                                                       // 2167\n+function ($) {                                                                                                        // 2168\n  'use strict';                                                                                                        // 2169\n                                                                                                                       // 2170\n  // AFFIX CLASS DEFINITION                                                                                            // 2171\n  // ======================                                                                                            // 2172\n                                                                                                                       // 2173\n  var Affix = function (element, options) {                                                                            // 2174\n    this.options = $.extend({}, Affix.DEFAULTS, options)                                                               // 2175\n                                                                                                                       // 2176\n    this.$target = $(this.options.target)                                                                              // 2177\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))                                               // 2178\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))                                  // 2179\n                                                                                                                       // 2180\n    this.$element     = $(element)                                                                                     // 2181\n    this.affixed      =                                                                                                // 2182\n    this.unpin        =                                                                                                // 2183\n    this.pinnedOffset = null                                                                                           // 2184\n                                                                                                                       // 2185\n    this.checkPosition()                                                                                               // 2186\n  }                                                                                                                    // 2187\n                                                                                                                       // 2188\n  Affix.VERSION  = '3.3.1'                                                                                             // 2189\n                                                                                                                       // 2190\n  Affix.RESET    = 'affix affix-top affix-bottom'                                                                      // 2191\n                                                                                                                       // 2192\n  Affix.DEFAULTS = {                                                                                                   // 2193\n    offset: 0,                                                                                                         // 2194\n    target: window                                                                                                     // 2195\n  }                                                                                                                    // 2196\n                                                                                                                       // 2197\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {                                // 2198\n    var scrollTop    = this.$target.scrollTop()                                                                        // 2199\n    var position     = this.$element.offset()                                                                          // 2200\n    var targetHeight = this.$target.height()                                                                           // 2201\n                                                                                                                       // 2202\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false                       // 2203\n                                                                                                                       // 2204\n    if (this.affixed == 'bottom') {                                                                                    // 2205\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'                        // 2206\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'                              // 2207\n    }                                                                                                                  // 2208\n                                                                                                                       // 2209\n    var initializing   = this.affixed == null                                                                          // 2210\n    var colliderTop    = initializing ? scrollTop : position.top                                                       // 2211\n    var colliderHeight = initializing ? targetHeight : height                                                          // 2212\n                                                                                                                       // 2213\n    if (offsetTop != null && colliderTop <= offsetTop) return 'top'                                                    // 2214\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'         // 2215\n                                                                                                                       // 2216\n    return false                                                                                                       // 2217\n  }                                                                                                                    // 2218\n                                                                                                                       // 2219\n  Affix.prototype.getPinnedOffset = function () {                                                                      // 2220\n    if (this.pinnedOffset) return this.pinnedOffset                                                                    // 2221\n    this.$element.removeClass(Affix.RESET).addClass('affix')                                                           // 2222\n    var scrollTop = this.$target.scrollTop()                                                                           // 2223\n    var position  = this.$element.offset()                                                                             // 2224\n    return (this.pinnedOffset = position.top - scrollTop)                                                              // 2225\n  }                                                                                                                    // 2226\n                                                                                                                       // 2227\n  Affix.prototype.checkPositionWithEventLoop = function () {                                                           // 2228\n    setTimeout($.proxy(this.checkPosition, this), 1)                                                                   // 2229\n  }                                                                                                                    // 2230\n                                                                                                                       // 2231\n  Affix.prototype.checkPosition = function () {                                                                        // 2232\n    if (!this.$element.is(':visible')) return                                                                          // 2233\n                                                                                                                       // 2234\n    var height       = this.$element.height()                                                                          // 2235\n    var offset       = this.options.offset                                                                             // 2236\n    var offsetTop    = offset.top                                                                                      // 2237\n    var offsetBottom = offset.bottom                                                                                   // 2238\n    var scrollHeight = $('body').height()                                                                              // 2239\n                                                                                                                       // 2240\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset                                           // 2241\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)                                    // 2242\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)                                 // 2243\n                                                                                                                       // 2244\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)                                           // 2245\n                                                                                                                       // 2246\n    if (this.affixed != affix) {                                                                                       // 2247\n      if (this.unpin != null) this.$element.css('top', '')                                                             // 2248\n                                                                                                                       // 2249\n      var affixType = 'affix' + (affix ? '-' + affix : '')                                                             // 2250\n      var e         = $.Event(affixType + '.bs.affix')                                                                 // 2251\n                                                                                                                       // 2252\n      this.$element.trigger(e)                                                                                         // 2253\n                                                                                                                       // 2254\n      if (e.isDefaultPrevented()) return                                                                               // 2255\n                                                                                                                       // 2256\n      this.affixed = affix                                                                                             // 2257\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null                                                   // 2258\n                                                                                                                       // 2259\n      this.$element                                                                                                    // 2260\n        .removeClass(Affix.RESET)                                                                                      // 2261\n        .addClass(affixType)                                                                                           // 2262\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')                                                  // 2263\n    }                                                                                                                  // 2264\n                                                                                                                       // 2265\n    if (affix == 'bottom') {                                                                                           // 2266\n      this.$element.offset({                                                                                           // 2267\n        top: scrollHeight - height - offsetBottom                                                                      // 2268\n      })                                                                                                               // 2269\n    }                                                                                                                  // 2270\n  }                                                                                                                    // 2271\n                                                                                                                       // 2272\n                                                                                                                       // 2273\n  // AFFIX PLUGIN DEFINITION                                                                                           // 2274\n  // =======================                                                                                           // 2275\n                                                                                                                       // 2276\n  function Plugin(option) {                                                                                            // 2277\n    return this.each(function () {                                                                                     // 2278\n      var $this   = $(this)                                                                                            // 2279\n      var data    = $this.data('bs.affix')                                                                             // 2280\n      var options = typeof option == 'object' && option                                                                // 2281\n                                                                                                                       // 2282\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))                                             // 2283\n      if (typeof option == 'string') data[option]()                                                                    // 2284\n    })                                                                                                                 // 2285\n  }                                                                                                                    // 2286\n                                                                                                                       // 2287\n  var old = $.fn.affix                                                                                                 // 2288\n                                                                                                                       // 2289\n  $.fn.affix             = Plugin                                                                                      // 2290\n  $.fn.affix.Constructor = Affix                                                                                       // 2291\n                                                                                                                       // 2292\n                                                                                                                       // 2293\n  // AFFIX NO CONFLICT                                                                                                 // 2294\n  // =================                                                                                                 // 2295\n                                                                                                                       // 2296\n  $.fn.affix.noConflict = function () {                                                                                // 2297\n    $.fn.affix = old                                                                                                   // 2298\n    return this                                                                                                        // 2299\n  }                                                                                                                    // 2300\n                                                                                                                       // 2301\n                                                                                                                       // 2302\n  // AFFIX DATA-API                                                                                                    // 2303\n  // ==============                                                                                                    // 2304\n                                                                                                                       // 2305\n  $(window).on('load', function () {                                                                                   // 2306\n    $('[data-spy=\"affix\"]').each(function () {                                                                         // 2307\n      var $spy = $(this)                                                                                               // 2308\n      var data = $spy.data()                                                                                           // 2309\n                                                                                                                       // 2310\n      data.offset = data.offset || {}                                                                                  // 2311\n                                                                                                                       // 2312\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom                                            // 2313\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop                                               // 2314\n                                                                                                                       // 2315\n      Plugin.call($spy, data)                                                                                          // 2316\n    })                                                                                                                 // 2317\n  })                                                                                                                   // 2318\n                                                                                                                       // 2319\n}(jQuery);                                                                                                             // 2320\n                                                                                                                       // 2321\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                     // 2331\n}).call(this);                                                       // 2332\n                                                                     // 2333\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['mizzao:bootstrap-3'] = {};\n\n})();\n","servePath":"/packages/mizzao_bootstrap-3.js"}]